var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AjaxAppender.html",[0,0.263,1,1.011]],["body/classes/AjaxAppender.html",[0,0.243,1,1.153,2,0.3,3,0.239,4,0.196,5,0.467,6,0.389,7,3.193,8,0.908,9,0.753,10,1.884,11,2.602,12,1.238,13,2.319,14,1.983,15,2.471,16,1.662,17,1.246,18,0.055,19,3.187,20,2.471,21,3.005,22,2.471,23,3.005,24,2.471,25,1.006,26,0.155,27,0.857,28,1.999,29,3.447,30,1.139,31,3.447,32,3.447,33,3.447,34,3.447,35,2.471,36,2.471,37,2.471,38,2.319,39,0.684,40,1.662,41,2.068,42,1.818,43,1.577,44,1.231,45,1.744,46,1.072,47,1.801,48,1.521,49,0.533,50,0.848,51,3.005,52,1.577,53,1.985,54,1.983,55,0.615,56,1.662,57,2.049,58,1.577,59,1.662,60,1.662,61,1.929,62,1.96,63,1.423,64,1.266,65,0.936,66,1.231,67,1.662,68,1.983,69,1.231,70,1.577,71,1.395,72,1.983,73,3.448,74,2.767,75,1.577,76,1.423,77,1.072,78,2.319,79,1.985,80,1.985,81,2.319,82,3.046,83,1.577,84,2.89,85,3.743,86,3.743,87,1.577,88,3.447,89,2.319,90,2.767,91,3.447,92,3.447,93,2.471,94,1.577,95,1.311,96,2.471,97,2.471,98,2.471,99,1.577,100,2.471,101,1.577,102,2.471,103,1.983,104,1.577,105,1.072,106,0.553,107,0.991,108,0.908,109,0.936,110,1.061,111,0.908,112,0.521,113,0.786,114,0.908,115,0.196,116,1.061,117,1.061,118,1.624,119,1.754,120,1.577,121,1.061,122,1.577,123,1.983,124,1.061,125,0.286,126,1.722,127,1.061,128,1.754,129,1.266,130,1.983,131,3.743,132,2.471,133,2.471,134,1.577,135,2.471,136,1.577,137,1.577,138,1.577,139,1.577,140,1.577,141,1.577,142,1.577,143,1.577,144,1.577,145,1.577,146,1.577,147,1.061,148,1.266,149,0.908,150,2.471,151,1.577,152,1.662,153,1.577,154,2.471,155,1.577,156,1.061,157,1.577,158,0.786,159,1.577,160,0.684,161,0.908,162,0.908,163,1.061,164,1.061,165,1.577,166,1.577,167,1.577,168,1.577,169,1.577,170,1.577,171,1.577,172,1.577,173,1.577,174,0.024,175,0.024]],["title/interfaces/AjaxAppenderConfiguration.html",[41,1.331,176,0.332]],["body/interfaces/AjaxAppenderConfiguration.html",[1,1.211,2,0.445,3,0.485,4,0.397,5,0.315,6,0.381,7,2.153,9,0.58,11,2.745,12,1.254,17,0.796,18,0.054,19,4.048,21,3.827,23,3.827,25,1.666,26,0.315,27,1.019,41,2.042,49,0.592,50,1.077,55,1.019,71,1.492,72,3.827,73,3.29,74,3.29,90,3.29,95,1.354,103,3.29,106,0.915,115,0.397,121,2.757,123,3.827,125,0.865,174,0.04,175,0.04,176,0.509,177,1.594,178,1.449,179,2.36,180,1.552,181,1.178,182,1.354,183,1.354,184,4.098,185,4.098]],["title/interfaces/BrowserConsoleAppenderConfiguration.html",[176,0.332,186,1.538]],["body/interfaces/BrowserConsoleAppenderConfiguration.html",[2,0.48,3,0.576,4,0.471,5,0.373,6,0.282,9,0.689,17,0.944,18,0.053,25,1.737,26,0.373,27,1.133,49,0.471,50,0.973,55,1.133,106,0.886,115,0.471,125,0.827,174,0.045,175,0.045,176,0.566,177,1.892,178,1.309,179,2.624,180,1.725,181,1.455,182,1.505,183,1.505,186,2.624,187,3.047,188,1.892,189,2.186]],["title/classes/LocalStorageAppender.html",[0,0.263,190,1.011]],["body/classes/LocalStorageAppender.html",[0,0.24,2,0.296,3,0.235,4,0.192,5,0.442,6,0.371,8,0.893,9,0.674,10,1.849,12,1.29,16,1.64,17,1.257,18,0.055,25,0.995,26,0.153,27,0.606,28,1.941,30,1.128,38,2.297,39,0.673,40,1.64,42,1.736,44,1.215,45,1.736,46,1.058,47,1.481,48,1.411,49,0.424,50,0.729,53,1.734,56,1.64,57,2.027,59,1.64,60,1.64,61,1.812,62,1.853,63,1.404,64,1.244,65,0.923,66,1.215,67,1.64,68,1.957,69,1.215,71,1.339,77,1.481,78,2.652,79,2.269,80,2.269,81,2.652,84,2.297,95,0.805,105,1.481,106,0.715,107,1.067,109,0.923,111,0.893,112,0.512,113,0.773,114,1.734,115,0.192,116,1.043,117,1.043,118,1.611,119,1.404,124,1.043,125,0.281,126,1.481,127,1.043,128,1.734,129,1.244,130,1.957,147,1.043,148,1.244,149,0.893,152,1.64,156,1.043,158,0.773,160,1.307,161,0.893,162,0.893,163,1.043,164,1.043,174,0.024,175,0.024,180,1.663,190,0.923,191,3.025,192,2.215,193,2.433,194,1.64,195,2.355,196,2.437,197,3.012,198,2.741,199,3.164,200,2.437,201,1.702,202,2.437,203,3.414,204,3.414,205,2.297,206,2.741,207,1.957,208,2.055,209,1.244,210,1.55,211,1.55,212,3.164,213,1.55,214,1.55,215,1.989,216,1.55,217,2.269,218,1.957,219,1.55,220,1.64,221,1.957,222,1.957,223,2.741,224,1.55,225,0.587,226,0.893,227,1.043,228,1.244,229,0.893,230,2.297,231,1.966,232,1.64,233,1.64,234,2.437,235,3.012,236,2.437,237,3.941,238,2.437,239,3.012,240,1.55,241,1.244,242,1.55,243,2.98,244,1.55,245,1.64,246,1.55,247,1.55,248,1.957,249,1.55,250,1.55,251,1.244,252,1.043,253,1.244,254,1.244,255,2.418,256,3.164,257,1.957,258,1.043,259,0.445,260,1.244,261,0.445,262,1.244,263,1.404,264,1.244,265,1.244,266,0.773,267,1.244,268,1.244,269,1.244,270,1.64,271,2.437,272,2.437,273,2.437,274,1.55,275,1.244,276,1.55,277,1.55]],["title/interfaces/LocalStorageAppenderConfiguration.html",[176,0.332,208,1.331]],["body/interfaces/LocalStorageAppenderConfiguration.html",[2,0.458,3,0.518,4,0.424,5,0.336,6,0.346,9,0.619,10,1.616,12,1.214,17,0.849,18,0.054,25,1.693,26,0.336,27,1.062,49,0.578,50,1.043,55,1.062,71,1.444,77,1.852,106,0.93,115,0.424,125,0.886,174,0.042,175,0.042,176,0.53,177,1.701,178,1.403,179,2.458,180,1.616,181,1.227,182,1.41,183,1.41,190,1.292,191,2.296,192,2.021,193,2.433,195,2.127,198,3.427,199,3.918,201,2.433,208,2.127,217,2.458,229,2.458]],["title/classes/LogLevelConverter.html",[0,0.263,112,0.882]],["body/classes/LogLevelConverter.html",[0,0.42,2,0.336,3,0.37,4,0.303,5,0.42,6,0.355,9,0.715,18,0.054,26,0.24,28,1.492,30,1.128,42,1.492,45,1.492,47,1.71,48,1.302,49,0.646,50,0.842,55,0.606,61,2.066,69,2.532,76,2.926,106,0.868,107,0.981,109,1.293,112,1.128,115,0.303,119,2.857,125,0.442,126,1.71,128,2.27,174,0.033,175,0.033,178,1.133,181,0.701,182,0.805,183,0.805,225,1.97,226,1.404,259,1.524,278,1.853,279,1.957,280,3.415,281,4.882,282,2.298,283,3.415,284,3.415,285,3.415,286,3.415,287,4.961,288,2.438,289,3.428,290,3.415,291,2.438,292,4.27,293,3.415,294,2.438,295,3.941,296,4.333,297,3.415,298,3.941,299,3.415,300,3.941,301,3.415,302,3.941,303,3.415,304,3.941,305,3.415,306,3.941,307,3.415,308,3.941,309,3.415,310,3.941,311,3.415,312,3.941,313,3.164]],["title/interfaces/LogMessage.html",[176,0.332,215,1.159]],["body/interfaces/LogMessage.html",[2,0.345,3,0.532,4,0.435,5,0.345,6,0.383,9,0.636,12,1.326,18,0.054,26,0.345,27,1.08,30,1.434,48,1.434,49,0.629,89,2.922,106,0.983,115,0.435,174,0.042,175,0.042,176,0.539,215,1.884,245,3.316,259,1.483,261,1.483,266,2.456,278,1.522,314,2.815,315,3.957,316,4.716]],["title/classes/Logger.html",[0,0.263,261,0.767]],["body/classes/Logger.html",[0,0.216,2,0.414,3,0.207,4,0.169,5,0.457,6,0.402,9,0.784,12,1.155,18,0.055,26,0.134,28,1.983,30,1.677,39,0.591,42,1.734,44,1.096,45,1.202,46,0.954,47,2.242,48,1.707,49,0.549,50,1.089,55,0.866,61,1.885,62,2.101,66,1.096,71,0.392,76,1.267,79,1.267,80,1.267,95,0.727,106,0.938,107,0.795,109,0.833,112,0.45,113,0.679,114,2.737,115,0.169,118,0.591,125,0.576,126,2.357,158,1.582,160,2.063,174,0.021,175,0.021,181,1.172,182,1.048,183,1.048,225,1.41,226,0.785,259,1.471,261,1.316,263,0.785,266,2.508,270,1.48,317,1.094,318,2.796,319,2.796,320,2.2,321,3.174,322,3.174,323,2.2,324,2.2,325,1.363,326,0.917,327,2.2,328,1.363,329,3.199,330,4.843,331,2.2,332,1.363,333,2.2,334,1.363,335,2.2,336,1.363,337,2.2,338,1.363,339,2.2,340,1.363,341,2.2,342,4.949,343,1.363,344,2.22,345,1.363,346,2.2,347,1.363,348,2.2,349,1.363,350,2.2,351,1.363,352,2.2,353,1.363,354,2.548,355,1.094,356,1.363,357,1.363,358,1.363,359,1.363,360,4.077,361,1.363,362,2.766,363,1.363,364,2.766,365,2.766,366,1.363,367,1.363,368,1.363,369,1.363,370,1.363,371,1.363,372,2.2,373,1.363,374,1.363,375,1.363,376,0.917,377,1.363,378,0.917,379,0.917,380,1.363]],["title/injectables/LoggingService.html",[381,1.538,382,1.331]],["body/injectables/LoggingService.html",[0,0.172,1,1.233,2,0.172,3,0.266,4,0.218,5,0.438,6,0.394,9,0.713,10,1.633,11,1.544,12,1.291,13,1.804,14,2.152,17,1.26,18,0.055,25,1.204,26,0.172,27,0.667,28,1.918,30,0.885,39,1.412,42,1.633,44,1.958,45,1.876,46,1.163,47,1.582,48,1.536,49,0.453,50,0.695,51,3.659,53,2.263,54,2.927,55,0.81,61,1.761,62,1.163,63,1.544,65,1.015,66,1.336,69,1.336,71,0.77,76,1.544,77,1.163,95,1.298,105,1.798,106,0.662,107,1.31,108,1.009,109,1.233,110,2.19,112,0.579,113,0.873,115,0.218,118,1.163,125,0.486,126,1.582,128,1.009,149,1.009,158,1.817,160,1.705,161,1.009,162,1.009,174,0.026,175,0.026,178,0.77,180,1.015,181,0.77,188,0.873,189,2.1,190,1.233,192,0.76,195,0.873,201,1.336,205,2.453,215,1.412,220,1.804,227,1.179,230,1.179,231,1.009,232,1.179,233,1.179,241,2.152,252,1.804,259,1.129,261,1.507,263,2.1,296,1.407,313,1.407,326,1.179,344,1.407,355,2.152,376,1.179,378,1.179,379,1.179,381,1.874,382,1.336,383,1.407,384,2.927,385,1.804,386,2.152,387,2.992,388,1.684,389,2.152,390,2.68,391,3.646,392,3.646,393,2.68,394,3.646,395,1.752,396,2.1,397,1.752,398,2.68,399,1.752,400,2.152,401,2.152,402,1.752,403,2.68,404,2.68,405,2.152,406,2.68,407,1.752,408,2.68,409,1.752,410,1.752,411,2.68,412,3.255,413,1.752,414,1.752,415,1.544,416,1.752,417,1.752,418,2.68,419,1.752,420,1.407,421,1.752,422,1.752,423,1.752,424,1.752,425,1.752,426,1.752,427,1.179,428,1.752,429,1.752,430,1.752,431,2.68,432,2.68,433,2.68,434,1.752,435,1.752,436,1.752,437,1.752,438,1.752,439,1.752,440,1.752,441,1.752,442,1.752,443,2.68,444,1.752,445,1.752,446,1.752,447,1.752,448,1.752,449,1.752,450,1.752,451,1.752,452,1.752,453,1.752,454,1.752,455,1.752,456,1.752,457,1.752,458,1.752,459,1.752,460,1.752,461,1.752,462,1.752,463,1.752,464,1.752]],["title/interfaces/LoggingServiceConfiguration.html",[176,0.332,396,1.538]],["body/interfaces/LoggingServiceConfiguration.html",[1,1.908,2,0.314,3,0.484,4,0.396,5,0.314,6,0.335,9,0.579,17,1.017,18,0.055,26,0.314,27,1.017,41,2.373,49,0.611,50,1.129,95,1.714,107,1.368,110,2.145,111,2.742,115,0.396,125,0.742,174,0.04,175,0.04,176,0.508,178,1.175,186,2.742,188,1.589,189,2.901,190,1.908,192,1.383,195,1.589,208,2.373,225,1.803,259,1.175,261,1.175,278,1.383,282,2.751,382,2.038,387,2.751,388,1.908,396,2.355,415,1.836,427,2.145,465,2.56,466,4.089,467,3.283,468,3.624,469,2.373]],["title/modules/LoggingServiceModule.html",[470,1.331,471,1.538]],["body/modules/LoggingServiceModule.html",[0,0.398,2,0.398,3,0.614,4,0.502,5,0.398,6,0.301,18,0.054,107,1.36,108,2.33,115,0.588,174,0.046,175,0.046,278,1.756,470,2.017,471,2.725,472,4.046,473,3.799,474,4.046]],["title/classes/MemoryAppender.html",[0,0.263,388,1.011]],["body/classes/MemoryAppender.html",[0,0.259,2,0.168,3,0.259,4,0.212,5,0.445,6,0.375,8,0.984,9,0.744,10,1.91,12,1.305,17,1.269,18,0.055,25,1.059,26,0.168,27,0.654,28,1.942,30,1.189,38,2.422,39,0.742,40,1.77,42,1.75,44,1.311,45,1.807,46,1.141,47,1.686,48,1.495,49,0.482,50,0.83,53,1.846,56,1.77,57,2.157,59,1.77,60,1.77,61,1.807,62,2.04,63,1.515,65,0.996,66,1.311,67,1.77,69,1.311,71,1.371,77,1.562,78,1.77,79,1.515,80,1.515,81,1.77,84,2.422,89,1.77,95,0.869,105,1.562,106,0.477,107,1.117,109,0.996,111,0.984,112,0.565,113,0.852,114,0.984,115,0.212,116,1.15,117,1.15,118,1.686,119,1.515,124,1.15,126,1.686,127,1.15,147,1.15,149,0.984,152,1.77,158,1.311,160,1.141,161,0.984,162,0.984,163,1.15,164,1.15,174,0.026,175,0.026,178,0.756,180,1.554,193,2.378,194,1.77,201,1.794,205,2.422,206,2.889,207,2.111,209,1.372,212,2.889,215,2.07,217,2.363,218,2.111,220,1.77,221,2.111,222,2.111,223,2.889,225,0.647,226,0.984,227,1.15,228,1.372,229,1.846,230,1.77,231,1.515,232,1.77,233,1.77,243,2.111,245,1.15,248,2.111,251,1.372,252,1.15,253,1.372,254,1.372,255,2.573,256,3.294,257,1.372,258,1.15,259,0.491,260,1.372,261,0.491,262,1.372,263,0.984,264,1.372,265,1.372,266,0.852,267,1.372,268,1.372,269,1.372,275,1.372,326,1.15,329,1.15,385,1.77,388,1.554,400,2.111,415,2.606,420,2.111,469,2.13,475,3.045,476,2.111,477,2.63,478,2.63,479,1.71,480,1.71,481,1.71,482,1.71,483,1.71,484,2.63,485,1.71,486,2.63,487,4.274,488,2.889,489,2.111,490,2.63,491,1.71,492,1.71,493,2.63,494,1.71,495,1.71,496,2.63,497,1.71,498,1.71,499,1.71]],["title/interfaces/MemoryAppenderConfiguration.html",[176,0.332,469,1.331]],["body/interfaces/MemoryAppenderConfiguration.html",[2,0.469,3,0.544,4,0.445,5,0.353,6,0.354,9,0.651,10,1.667,12,1.095,17,0.892,18,0.054,25,1.714,26,0.353,27,1.095,49,0.547,50,1.061,55,1.095,71,1.465,106,0.864,115,0.445,125,0.799,174,0.043,175,0.043,176,0.547,177,1.788,178,1.428,179,2.535,180,1.667,181,1.265,182,1.454,183,1.454,193,2.194,201,2.476,217,2.535,229,2.535,388,1.358,469,2.194,475,2.414]],["title/coverage.html",[500,2.919]],["body/coverage.html",[0,0.494,1,1.29,4,0.423,5,0.531,6,0.401,7,2.869,8,2.68,18,0.053,41,1.698,45,1.29,49,0.423,112,1.125,174,0.042,175,0.042,176,0.636,177,2.431,186,1.962,187,2.735,188,1.698,190,1.29,191,2.869,192,1.85,208,1.698,215,1.478,261,0.979,278,2.02,279,2.735,314,2.735,317,2.735,381,1.962,382,1.698,383,2.735,388,1.29,396,1.962,465,2.735,469,1.698,475,2.869,500,2.735,501,2.735,502,3.406,503,3.406,504,5.396,505,3.406,506,3.406,507,3.406,508,4.264,509,3.406,510,4.264,511,3.406,512,3.406,513,3.406,514,3.406,515,3.406,516,3.406]],["title/dependencies.html",[65,1.215,517,1.793]],["body/dependencies.html",[18,0.054,65,1.488,108,2.263,109,1.488,174,0.045,175,0.045,427,3.13,518,3.929,519,5.427,520,3.929,521,3.929,522,3.929,523,3.929,524,4.651,525,3.929,526,3.929,527,3.929,528,3.929,529,3.929,530,3.929,531,3.929,532,3.929,533,3.929,534,3.929]],["title/miscellaneous/enumerations.html",[535,1.793,536,2.576]],["body/miscellaneous/enumerations.html",[2,0.408,5,0.408,6,0.356,18,0.047,26,0.408,55,1.031,125,0.752,174,0.047,175,0.047,181,1.191,182,1.369,183,1.369,225,1.817,259,1.191,278,1.798,535,3.327,536,3.327,537,4.144,538,4.798]],["title/index.html",[26,0.22,105,0.969,539,2.234]],["body/index.html",[0,0.382,1,1.57,2,0.442,6,0.397,10,1.57,11,1.695,12,1.239,13,1.98,16,1.98,17,1.149,18,0.054,26,0.195,28,0.751,30,0.972,39,0.861,42,1.328,46,0.861,48,0.972,49,0.436,55,1.031,61,1.114,62,0.861,65,1.114,71,1.008,77,1.884,95,1.159,105,0.861,106,0.36,107,1.115,115,0.482,118,0.861,125,0.704,156,1.335,160,1.522,174,0.034,175,0.029,178,0.846,181,1.248,182,1.282,183,1.369,188,1.934,189,2.235,190,1.328,192,1.277,193,1.467,194,2.361,195,1.467,225,1.57,231,1.142,258,1.98,259,1.466,261,1.475,266,1.467,270,1.98,282,1.335,289,1.592,315,1.592,318,2.362,319,2.362,329,1.335,354,1.592,376,1.335,378,1.335,379,2.361,382,2.164,384,3.116,385,1.98,386,2.816,387,2.612,388,1.57,389,2.362,401,2.362,405,3.116,415,1.695,467,1.592,468,1.592,471,1.695,473,1.592,476,1.592,488,3.328,489,3.116,501,1.592,517,1.592,540,4.717,541,1.983,542,2.943,543,2.943,544,3.508,545,3.508,546,1.983,547,1.983,548,2.943,549,1.983,550,1.983,551,1.983,552,1.983,553,1.983,554,2.943,555,1.983,556,1.983,557,1.983,558,1.983,559,1.983,560,3.508,561,1.983,562,1.983,563,3.508,564,2.943,565,1.983,566,1.983,567,2.943,568,1.983,569,3.881,570,1.983,571,1.983,572,2.943,573,3.881,574,1.983,575,1.983,576,3.508,577,2.943,578,2.943,579,1.983,580,3.881,581,1.983,582,1.983,583,1.983,584,1.983,585,4.146,586,1.983,587,2.943,588,1.983,589,1.983,590,1.983,591,1.983,592,1.592,593,1.983,594,1.983,595,1.983,596,2.943,597,1.983,598,1.983,599,3.508,600,1.983,601,1.983,602,1.983,603,1.983,604,2.943,605,1.983,606,1.983,607,1.983,608,1.983,609,1.983,610,2.943,611,2.943,612,1.983,613,2.943,614,1.983,615,1.983,616,2.943,617,1.983,618,2.943,619,1.983,620,1.983,621,2.943,622,2.943,623,3.881,624,1.983,625,1.983,626,1.983,627,1.983,628,2.943,629,1.983,630,1.983,631,1.983,632,1.983,633,1.983,634,1.983,635,1.983,636,1.983,637,1.983,638,1.983,639,1.983,640,2.943,641,2.943,642,1.983,643,1.983,644,1.983,645,1.983,646,1.983,647,1.983,648,1.983,649,1.983,650,1.983,651,1.983,652,1.983,653,2.943,654,1.983,655,1.983,656,1.983,657,1.983,658,1.983,659,1.983,660,2.943,661,1.983,662,1.983,663,1.983,664,2.943,665,2.943]],["title/modules.html",[470,1.812]],["body/modules.html",[18,0.048,174,0.048,175,0.048,470,2.14,471,2.473,666,4.294]],["title/overview.html",[667,2.919]],["body/overview.html",[0,0.417,18,0.048,121,3.27,174,0.048,175,0.048,176,0.526,381,2.44,470,2.111,592,3.401,667,3.401,668,4.236]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":123,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["0.8.26",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":121,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"overview.html":{}}}],["1.2.1",{"_index":557,"title":{},"body":{"index.html":{}}}],["1.4.15",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":22,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["10/10",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["18:49:43.794",{"_index":584,"title":{},"body":{"index.html":{}}}],["18:49:43.797",{"_index":586,"title":{},"body":{"index.html":{}}}],["18:49:43.801",{"_index":587,"title":{},"body":{"index.html":{}}}],["18:49:43.814",{"_index":590,"title":{},"body":{"index.html":{}}}],["2",{"_index":591,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":554,"title":{},"body":{"index.html":{}}}],["2.2.0",{"_index":555,"title":{},"body":{"index.html":{}}}],["2.2.1",{"_index":558,"title":{},"body":{"index.html":{}}}],["2.4.8",{"_index":556,"title":{},"body":{"index.html":{}}}],["2.5.4",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":229,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["3.0.0",{"_index":553,"title":{},"body":{"index.html":{}}}],["3.1.0",{"_index":552,"title":{},"body":{"index.html":{}}}],["3.9.0",{"_index":550,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":545,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":588,"title":{},"body":{"index.html":{}}}],["5",{"_index":592,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.0.0",{"_index":551,"title":{},"body":{"index.html":{}}}],["5.1.0",{"_index":549,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":202,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["6",{"_index":668,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":548,"title":{},"body":{"index.html":{}}}],["6.1.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["60000",{"_index":24,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["8",{"_index":142,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["8/8",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["99]logger",{"_index":593,"title":{},"body":{"index.html":{}}}],["a.b",{"_index":614,"title":{},"body":{"index.html":{}}}],["a.b.c",{"_index":613,"title":{},"body":{"index.html":{}}}],["a.b.c.d",{"_index":611,"title":{},"body":{"index.html":{}}}],["ad",{"_index":411,"title":{},"body":{"injectables/LoggingService.html":{}}}],["add",{"_index":258,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["addit",{"_index":664,"title":{},"body":{"index.html":{}}}],["addition",{"_index":615,"title":{},"body":{"index.html":{}}}],["ajax",{"_index":110,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{}}}],["ajaxappend",{"_index":1,"title":{"classes/AjaxAppender.html":{}},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["ajaxappender(configuration.ajaxappend",{"_index":449,"title":{},"body":{"injectables/LoggingService.html":{}}}],["ajaxappender.appenderfailed.subscribe((messag",{"_index":450,"title":{},"body":{"injectables/LoggingService.html":{}}}],["ajaxappender.batchsizedefault",{"_index":151,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["ajaxappender.thresholddefault",{"_index":153,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["ajaxappender.timerintervaldefault",{"_index":155,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["ajaxappenderconfigur",{"_index":41,"title":{"interfaces/AjaxAppenderConfiguration.html":{}},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{}}}],["ajaxappenderfail",{"_index":391,"title":{},"body":{"injectables/LoggingService.html":{}}}],["alert",{"_index":421,"title":{},"body":{"injectables/LoggingService.html":{}}}],["allow",{"_index":222,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["alreadi",{"_index":252,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["amend",{"_index":390,"title":{},"body":{"injectables/LoggingService.html":{}}}],["angular",{"_index":547,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":108,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{},"modules/LoggingServiceModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["anyth",{"_index":477,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["api",{"_index":665,"title":{},"body":{"index.html":{}}}],["app",{"_index":560,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":650,"title":{},"body":{"index.html":{}}}],["app_initi",{"_index":657,"title":{},"body":{"index.html":{}}}],["append",{"_index":10,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["append(loggingev",{"_index":56,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["appender'",{"_index":84,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["appender.configur",{"_index":111,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{}}}],["appender.configuration.t",{"_index":177,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{}}}],["appender.model",{"_index":412,"title":{},"body":{"injectables/LoggingService.html":{}}}],["appender.model.t",{"_index":8,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{},"coverage.html":{}}}],["appender.model.ts:100",{"_index":210,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:103",{"_index":58,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:104",{"_index":491,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:111",{"_index":482,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:112",{"_index":104,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:120",{"_index":75,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:121",{"_index":483,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:124",{"_index":224,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:127",{"_index":70,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:131",{"_index":213,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:134",{"_index":481,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:135",{"_index":94,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:138",{"_index":216,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:142",{"_index":83,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:143",{"_index":485,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:148",{"_index":219,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:149",{"_index":99,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:156",{"_index":87,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:164",{"_index":101,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:169",{"_index":214,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:177",{"_index":211,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["appender.model.ts:32",{"_index":52,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:34",{"_index":209,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["appender.model.ts:35",{"_index":43,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appender.model.ts:61",{"_index":480,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:78",{"_index":479,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["appender.model.ts:80",{"_index":64,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{}}}],["appenderfail",{"_index":29,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["application/json",{"_index":140,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["appmodul",{"_index":567,"title":{},"body":{"index.html":{}}}],["arg",{"_index":342,"title":{},"body":{"classes/Logger.html":{}}}],["arg.tostr",{"_index":372,"title":{},"body":{"classes/Logger.html":{}}}],["args.push(this.formatargument(param",{"_index":360,"title":{},"body":{"classes/Logger.html":{}}}],["argument",{"_index":341,"title":{},"body":{"classes/Logger.html":{}}}],["array",{"_index":468,"title":{},"body":{"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["automat",{"_index":612,"title":{},"body":{"index.html":{}}}],["avail",{"_index":624,"title":{},"body":{"index.html":{}}}],["backend",{"_index":640,"title":{},"body":{"index.html":{}}}],["batch",{"_index":96,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["batchsiz",{"_index":21,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["batchsizedefault",{"_index":120,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["below",{"_index":570,"title":{},"body":{"index.html":{}}}],["between",{"_index":91,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["brows",{"_index":666,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":427,"title":{},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"dependencies.html":{}}}],["browser'",{"_index":194,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["browserconsoleappend",{"_index":189,"title":{},"body":{"interfaces/BrowserConsoleAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["browserconsoleappenderconfigur",{"_index":186,"title":{"interfaces/BrowserConsoleAppenderConfiguration.html":{}},"body":{"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{}}}],["build",{"_index":608,"title":{},"body":{"index.html":{}}}],["built",{"_index":561,"title":{},"body":{"index.html":{}}}],["c",{"_index":432,"title":{},"body":{"injectables/LoggingService.html":{}}}],["call",{"_index":488,"title":{},"body":{"classes/MemoryAppender.html":{},"index.html":{}}}],["callback",{"_index":487,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["case",{"_index":296,"title":{},"body":{"classes/LogLevelConverter.html":{},"injectables/LoggingService.html":{}}}],["catch",{"_index":378,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{},"index.html":{}}}],["chang",{"_index":156,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"index.html":{}}}],["charset=utf",{"_index":141,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["class",{"_index":0,"title":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{}},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["clearlog",{"_index":203,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["code",{"_index":572,"title":{},"body":{"index.html":{}}}],["complet",{"_index":618,"title":{},"body":{"index.html":{}}}],["compon",{"_index":594,"title":{},"body":{"index.html":{}}}],["configur",{"_index":17,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["configuration.ajaxappend",{"_index":448,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.batchs",{"_index":150,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["configuration.browserconsoleappend",{"_index":458,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.browserconsoleappender.threshold",{"_index":459,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.localstorageappend",{"_index":453,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.localstoragekey",{"_index":237,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["configuration.loglevel",{"_index":443,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.maxmessag",{"_index":248,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["configuration.memoryappend",{"_index":456,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configuration.threshold",{"_index":152,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["configuration.timerinterv",{"_index":154,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["configuration.url",{"_index":131,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["configure(configur",{"_index":63,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["configure](#configur",{"_index":416,"title":{},"body":{"injectables/LoggingService.html":{}}}],["configurelog",{"_index":659,"title":{},"body":{"index.html":{}}}],["configurelogging(loggingservic",{"_index":651,"title":{},"body":{"index.html":{}}}],["consol",{"_index":188,"title":{},"body":{"interfaces/BrowserConsoleAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["consolelog",{"_index":638,"title":{},"body":{"index.html":{}}}],["const",{"_index":160,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["constructor(configur",{"_index":40,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["constructor(logg",{"_index":324,"title":{},"body":{"classes/Logger.html":{}}}],["convert",{"_index":281,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["convertedthreshold",{"_index":161,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["core",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":625,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":500,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":44,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["ctor",{"_index":576,"title":{},"body":{"index.html":{}}}],["current",{"_index":220,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["data",{"_index":69,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["date",{"_index":316,"title":{},"body":{"interfaces/LogMessage.html":{}}}],["date(logmessage.timestamp",{"_index":247,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["debug",{"_index":181,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["debug(methodnam",{"_index":327,"title":{},"body":{"classes/Logger.html":{}}}],["debugg",{"_index":428,"title":{},"body":{"injectables/LoggingService.html":{}}}],["declar",{"_index":474,"title":{},"body":{"modules/LoggingServiceModule.html":{}}}],["default",{"_index":178,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["defin",{"_index":42,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["definit",{"_index":467,"title":{},"body":{"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["dep",{"_index":654,"title":{},"body":{"index.html":{}}}],["depend",{"_index":65,"title":{"dependencies.html":{}},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"dependencies.html":{},"index.html":{}}}],["deriv",{"_index":408,"title":{},"body":{"injectables/LoggingService.html":{}}}],["describ",{"_index":598,"title":{},"body":{"index.html":{}}}],["descript",{"_index":9,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["develop",{"_index":636,"title":{},"body":{"index.html":{}}}],["differ",{"_index":282,"title":{},"body":{"classes/LogLevelConverter.html":{},"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["disabl",{"_index":628,"title":{},"body":{"index.html":{}}}],["display",{"_index":436,"title":{},"body":{"injectables/LoggingService.html":{}}}],["doc",{"_index":233,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["document",{"_index":501,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dot",{"_index":603,"title":{},"body":{"index.html":{}}}],["dotnet",{"_index":606,"title":{},"body":{"index.html":{}}}],["dure",{"_index":635,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":379,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{},"index.html":{}}}],["e.g",{"_index":573,"title":{},"body":{"index.html":{}}}],["e.messag",{"_index":380,"title":{},"body":{"classes/Logger.html":{}}}],["each",{"_index":73,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["element",{"_index":254,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["emitt",{"_index":423,"title":{},"body":{"injectables/LoggingService.html":{}}}],["empti",{"_index":130,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{}}}],["enabl",{"_index":476,"title":{},"body":{"classes/MemoryAppender.html":{},"index.html":{}}}],["encapsul",{"_index":559,"title":{},"body":{"index.html":{}}}],["entri",{"_index":318,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["entry(methodnam",{"_index":331,"title":{},"body":{"classes/Logger.html":{}}}],["enumer",{"_index":536,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":649,"title":{},"body":{"index.html":{}}}],["environment.t",{"_index":648,"title":{},"body":{"index.html":{}}}],["error",{"_index":55,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["error(\"configur",{"_index":129,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{}}}],["error(\"localstoragekey",{"_index":238,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["error(\"url",{"_index":132,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["error(`invalid",{"_index":313,"title":{},"body":{"classes/LogLevelConverter.html":{},"injectables/LoggingService.html":{}}}],["error(methodnam",{"_index":333,"title":{},"body":{"classes/Logger.html":{}}}],["event",{"_index":53,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["eventemitt",{"_index":51,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{}}}],["exampl",{"_index":621,"title":{},"body":{"index.html":{}}}],["exist",{"_index":241,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{}}}],["exit",{"_index":319,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["exit(methodnam",{"_index":335,"title":{},"body":{"classes/Logger.html":{}}}],["export",{"_index":115,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["extend",{"_index":116,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["fals",{"_index":138,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["fatal",{"_index":182,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["fatal(methodnam",{"_index":337,"title":{},"body":{"classes/Logger.html":{}}}],["feedback",{"_index":642,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{}}}],["final",{"_index":571,"title":{},"body":{"index.html":{}}}],["first",{"_index":566,"title":{},"body":{"index.html":{}}}],["follow",{"_index":386,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["format",{"_index":330,"title":{},"body":{"classes/Logger.html":{}}}],["formatargu",{"_index":320,"title":{},"body":{"classes/Logger.html":{}}}],["formatargument(arg",{"_index":339,"title":{},"body":{"classes/Logger.html":{}}}],["framework",{"_index":562,"title":{},"body":{"index.html":{}}}],["full",{"_index":253,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["function",{"_index":385,"title":{},"body":{"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["get",{"_index":105,"title":{"index.html":{}},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["getbatchs",{"_index":31,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["getinternalappend",{"_index":32,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["getinternallogg",{"_index":321,"title":{},"body":{"classes/Logger.html":{}}}],["getlayout",{"_index":33,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["getlocalstoragekey",{"_index":204,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["getlogg",{"_index":393,"title":{},"body":{"injectables/LoggingService.html":{}}}],["getlogger(loggernam",{"_index":398,"title":{},"body":{"injectables/LoggingService.html":{}}}],["getloglevel",{"_index":322,"title":{},"body":{"classes/Logger.html":{}}}],["getlogmessag",{"_index":205,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["getmaxmessag",{"_index":206,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["getrootlogg",{"_index":394,"title":{},"body":{"injectables/LoggingService.html":{}}}],["gettimerinterv",{"_index":34,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["given",{"_index":66,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["greater",{"_index":631,"title":{},"body":{"index.html":{}}}],["hello",{"_index":589,"title":{},"body":{"index.html":{}}}],["helper",{"_index":280,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["here",{"_index":375,"title":{},"body":{"classes/Logger.html":{}}}],["hierarchi",{"_index":610,"title":{},"body":{"index.html":{}}}],["higher",{"_index":662,"title":{},"body":{"index.html":{}}}],["http",{"_index":15,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["https://my.backend.xy/loggingbackend",{"_index":20,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["identifi",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["immediatedli",{"_index":184,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{}}}],["import",{"_index":107,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["includ",{"_index":622,"title":{},"body":{"index.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["info(methodnam",{"_index":346,"title":{},"body":{"classes/Logger.html":{}}}],["inform",{"_index":495,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["inherit",{"_index":617,"title":{},"body":{"index.html":{}}}],["inject",{"_index":381,"title":{"injectables/LoggingService.html":{}},"body":{"injectables/LoggingService.html":{},"coverage.html":{},"overview.html":{}}}],["instanc",{"_index":46,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["instanceof",{"_index":373,"title":{},"body":{"classes/Logger.html":{}}}],["instead",{"_index":661,"title":{},"body":{"index.html":{}}}],["intend",{"_index":627,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":176,"title":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/LogMessage.html":{},"interfaces/LoggingServiceConfiguration.html":{},"interfaces/MemoryAppenderConfiguration.html":{}},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/LogMessage.html":{},"interfaces/LoggingServiceConfiguration.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":76,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{}}}],["interv",{"_index":103,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["ionic",{"_index":540,"title":{},"body":{"index.html":{}}}],["ionic.logging.ajaxappend",{"_index":166,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["ionic.logging.localstorageappend",{"_index":274,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["ionic.logging.memoryappend",{"_index":498,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["java",{"_index":607,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":185,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{}}}],["js",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":114,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{}}}],["json.parse(localstorage.getitem(this.localstoragekey",{"_index":244,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["json.stringifi",{"_index":374,"title":{},"body":{"classes/Logger.html":{}}}],["json.stringify(arg",{"_index":377,"title":{},"body":{"classes/Logger.html":{}}}],["json.stringify(this.logmessag",{"_index":273,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["keep",{"_index":641,"title":{},"body":{"index.html":{}}}],["key",{"_index":198,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{}}}],["keyword",{"_index":236,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["kind",{"_index":609,"title":{},"body":{"index.html":{}}}],["last",{"_index":403,"title":{},"body":{"injectables/LoggingService.html":{}}}],["later",{"_index":639,"title":{},"body":{"index.html":{}}}],["latest",{"_index":541,"title":{},"body":{"index.html":{}}}],["layout",{"_index":85,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["length",{"_index":88,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["level",{"_index":259,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["level.convert",{"_index":113,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["level.converter.t",{"_index":279,"title":{},"body":{"classes/LogLevelConverter.html":{},"coverage.html":{}}}],["level.converter.ts:15",{"_index":288,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["level.converter.ts:43",{"_index":291,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["level.converter.ts:71",{"_index":294,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["level.loggernam",{"_index":444,"title":{},"body":{"injectables/LoggingService.html":{}}}],["level.loglevel",{"_index":447,"title":{},"body":{"injectables/LoggingService.html":{}}}],["level.model",{"_index":226,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{}}}],["level.model.t",{"_index":538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level.warn",{"_index":643,"title":{},"body":{"index.html":{}}}],["levelfromlog4javascript",{"_index":283,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["levelfromlog4javascript(level",{"_index":286,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["levelfromstr",{"_index":284,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["levelfromstring(level",{"_index":290,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["leveltolog4javascript",{"_index":285,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["leveltolog4javascript(level",{"_index":293,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["limit",{"_index":406,"title":{},"body":{"injectables/LoggingService.html":{}}}],["line:complet",{"_index":232,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["line:no",{"_index":234,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["local",{"_index":195,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["localstorag",{"_index":271,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorage.getitem(this.localstoragekey",{"_index":242,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorage.removeitem(this.localstoragekey",{"_index":277,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorage.setitem(this.localstoragekey",{"_index":272,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorageappend",{"_index":190,"title":{"classes/LocalStorageAppender.html":{}},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["localstorageappender(configuration.localstorageappend",{"_index":454,"title":{},"body":{"injectables/LoggingService.html":{}}}],["localstorageappender.maxmessagesdefault",{"_index":249,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorageappender.thresholddefault",{"_index":250,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["localstorageappenderconfigur",{"_index":208,"title":{"interfaces/LocalStorageAppenderConfiguration.html":{}},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{}}}],["localstoragekey",{"_index":199,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{}}}],["log",{"_index":6,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["log4javascript",{"_index":109,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"dependencies.html":{}}}],["log4javascript'",{"_index":289,"title":{},"body":{"classes/LogLevelConverter.html":{},"index.html":{}}}],["log4javascript.ajaxappend",{"_index":82,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["log4javascript.ajaxappender(configuration.url",{"_index":134,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["log4javascript.append",{"_index":117,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["log4javascript.browserconsoleappend",{"_index":418,"title":{},"body":{"injectables/LoggingService.html":{}}}],["log4javascript.getlogger(level.loggernam",{"_index":445,"title":{},"body":{"injectables/LoggingService.html":{}}}],["log4javascript.getlogger(logg",{"_index":356,"title":{},"body":{"classes/Logger.html":{}}}],["log4javascript.getrootlogg",{"_index":355,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{}}}],["log4javascript.getrootlogger().addappender(ajaxappend",{"_index":452,"title":{},"body":{"injectables/LoggingService.html":{}}}],["log4javascript.getrootlogger().addappender(localstorageappend",{"_index":455,"title":{},"body":{"injectables/LoggingService.html":{}}}],["log4javascript.jsonlayout(fals",{"_index":137,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["log4javascript.layout",{"_index":86,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["log4javascript.level",{"_index":287,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.al",{"_index":297,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.debug",{"_index":299,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.error",{"_index":301,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.fat",{"_index":303,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.info",{"_index":305,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.off",{"_index":307,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.trac",{"_index":309,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.level.warn",{"_index":311,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["log4javascript.logg",{"_index":344,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{}}}],["log4javascript.loggingev",{"_index":57,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["log4javascript.loglog.setquietmode(tru",{"_index":422,"title":{},"body":{"injectables/LoggingService.html":{}}}],["log4javascript.patternlayout(\"%d{hh:mm:ss,sss",{"_index":431,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger",{"_index":261,"title":{"classes/Logger.html":{}},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"coverage.html":{},"index.html":{}}}],["logger'",{"_index":619,"title":{},"body":{"index.html":{}}}],["logger(loggernam",{"_index":462,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger.addappender(this.browserconsoleappend",{"_index":435,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger.addappender(this.memoryappend",{"_index":442,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger.model",{"_index":413,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger.setlevel(log4javascript.level.warn",{"_index":426,"title":{},"body":{"injectables/LoggingService.html":{}}}],["logger.setlevel(loglevelconverter.leveltolog4javascript(loglevelconverter.levelfromstring(level.loglevel",{"_index":446,"title":{},"body":{"injectables/LoggingService.html":{}}}],["loggernam",{"_index":401,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["loggingconfigur",{"_index":645,"title":{},"body":{"index.html":{}}}],["loggingev",{"_index":60,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingevent.logg",{"_index":262,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingevent.logger.nam",{"_index":264,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingevent.messages.slice(1",{"_index":265,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingevent.messages[0",{"_index":267,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingevent.timestamp",{"_index":268,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loggingservic",{"_index":382,"title":{"injectables/LoggingService.html":{}},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["loggingservice.configure(environment.log",{"_index":652,"title":{},"body":{"index.html":{}}}],["loggingservice.getlogger(\"myapp.mycompon",{"_index":575,"title":{},"body":{"index.html":{}}}],["loggingserviceconfigur",{"_index":396,"title":{"interfaces/LoggingServiceConfiguration.html":{}},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{}}}],["loggingservicemodul",{"_index":471,"title":{"modules/LoggingServiceModule.html":{}},"body":{"modules/LoggingServiceModule.html":{},"index.html":{},"modules.html":{}}}],["loglevel",{"_index":225,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["loglevel.al",{"_index":298,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.debug",{"_index":300,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.error",{"_index":302,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.fat",{"_index":304,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.info",{"_index":306,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.off",{"_index":308,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.trac",{"_index":310,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel.warn",{"_index":312,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["loglevel[loglevelconverter.levelfromlog4javascript(loggingevent.level",{"_index":260,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loglevelconvert",{"_index":112,"title":{"classes/LogLevelConverter.html":{}},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"coverage.html":{}}}],["loglevelconverter.levelfromlog4javascript(this.logger.getlevel",{"_index":357,"title":{},"body":{"classes/Logger.html":{}}}],["loglevelconverter.levelfromstring(configuration.browserconsoleappender.threshold",{"_index":460,"title":{},"body":{"injectables/LoggingService.html":{}}}],["loglevelconverter.levelfromstring(configuration.threshold",{"_index":163,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["loglevelconverter.leveltolog4javascript",{"_index":162,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["logmessag",{"_index":215,"title":{"interfaces/LogMessage.html":{}},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LogMessage.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"coverage.html":{}}}],["logmessage.timestamp",{"_index":246,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["logmessageschang",{"_index":392,"title":{},"body":{"injectables/LoggingService.html":{}}}],["look",{"_index":564,"title":{},"body":{"index.html":{}}}],["lower",{"_index":630,"title":{},"body":{"index.html":{}}}],["m",{"_index":433,"title":{},"body":{"injectables/LoggingService.html":{}}}],["mainli",{"_index":78,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["make",{"_index":632,"title":{},"body":{"index.html":{}}}],["match",{"_index":175,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["maximum",{"_index":217,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["maxmessag",{"_index":201,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["maxmessagesdefault",{"_index":228,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["mean",{"_index":405,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["memori",{"_index":415,"title":{},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["memoryappend",{"_index":388,"title":{"classes/MemoryAppender.html":{}},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["memoryappender.maxmessagesdefault",{"_index":493,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["memoryappender.thresholddefault",{"_index":494,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["memoryappender](../memoryappender.html",{"_index":463,"title":{},"body":{"injectables/LoggingService.html":{}}}],["memoryappenderconfigur",{"_index":469,"title":{"interfaces/MemoryAppenderConfiguration.html":{}},"body":{"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{}}}],["messag",{"_index":12,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["message.model",{"_index":227,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["message.model.t",{"_index":314,"title":{},"body":{"interfaces/LogMessage.html":{},"coverage.html":{}}}],["method",{"_index":30,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["methodnam",{"_index":266,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["millisecond",{"_index":90,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["miscellan",{"_index":535,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["modifi",{"_index":68,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{}}}],["modul",{"_index":470,"title":{"modules/LoggingServiceModule.html":{},"modules.html":{}},"body":{"modules/LoggingServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":221,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["much",{"_index":275,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["multi",{"_index":655,"title":{},"body":{"index.html":{}}}],["myapp.mycompon",{"_index":585,"title":{},"body":{"index.html":{}}}],["myapp.mynamespace.mylogg",{"_index":660,"title":{},"body":{"index.html":{}}}],["mycompon",{"_index":574,"title":{},"body":{"index.html":{}}}],["mylog",{"_index":200,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["mymethod",{"_index":580,"title":{},"body":{"index.html":{}}}],["mymethod(index",{"_index":579,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["namespac",{"_index":605,"title":{},"body":{"index.html":{}}}],["need",{"_index":544,"title":{},"body":{"index.html":{}}}],["new",{"_index":45,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"coverage.html":{}}}],["next",{"_index":231,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["ngmodul",{"_index":473,"title":{},"body":{"modules/LoggingServiceModule.html":{},"index.html":{}}}],["null",{"_index":235,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["number",{"_index":71,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["object",{"_index":329,"title":{},"body":{"classes/Logger.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["older",{"_index":546,"title":{},"body":{"index.html":{}}}],["oldest",{"_index":223,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["on",{"_index":596,"title":{},"body":{"index.html":{}}}],["onlogmessageschangedcallback",{"_index":492,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["option",{"_index":50,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["order",{"_index":626,"title":{},"body":{"index.html":{}}}],["output",{"_index":583,"title":{},"body":{"index.html":{}}}],["overview",{"_index":667,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":67,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["packag",{"_index":517,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":437,"title":{},"body":{"injectables/LoggingService.html":{}}}],["par",{"_index":620,"title":{},"body":{"index.html":{}}}],["param",{"_index":126,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["paramet",{"_index":47,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["parent",{"_index":616,"title":{},"body":{"index.html":{}}}],["part",{"_index":601,"title":{},"body":{"index.html":{}}}],["partial",{"_index":466,"title":{},"body":{"interfaces/LoggingServiceConfiguration.html":{}}}],["per",{"_index":597,"title":{},"body":{"index.html":{}}}],["place",{"_index":599,"title":{},"body":{"index.html":{}}}],["possibl",{"_index":389,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["prevent",{"_index":419,"title":{},"body":{"injectables/LoggingService.html":{}}}],["privat",{"_index":118,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["process",{"_index":147,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["produc",{"_index":582,"title":{},"body":{"index.html":{}}}],["projects/.../log",{"_index":537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/ion",{"_index":5,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["properti",{"_index":27,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/LogMessage.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["provid",{"_index":653,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":417,"title":{},"body":{"injectables/LoggingService.html":{}}}],["public",{"_index":28,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["purpos",{"_index":81,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["queu",{"_index":92,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["quit",{"_index":604,"title":{},"body":{"index.html":{}}}],["read",{"_index":240,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["realtim",{"_index":490,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["recommend",{"_index":646,"title":{},"body":{"index.html":{}}}],["regist",{"_index":486,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["remain",{"_index":148,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{}}}],["remov",{"_index":212,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["represent",{"_index":292,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["request",{"_index":74,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["respect",{"_index":629,"title":{},"body":{"index.html":{}}}],["respons",{"_index":595,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":663,"title":{},"body":{"index.html":{}}}],["result",{"_index":174,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retriev",{"_index":404,"title":{},"body":{"injectables/LoggingService.html":{}}}],["return",{"_index":61,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["root",{"_index":387,"title":{},"body":{"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"index.html":{}}}],["rxj",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":543,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":563,"title":{},"body":{"index.html":{}}}],["save",{"_index":196,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["see",{"_index":569,"title":{},"body":{"index.html":{}}}],["send",{"_index":11,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"index.html":{}}}],["sent",{"_index":72,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["separ",{"_index":602,"title":{},"body":{"index.html":{}}}],["serial",{"_index":197,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["serv",{"_index":637,"title":{},"body":{"index.html":{}}}],["server",{"_index":13,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{},"index.html":{}}}],["servic",{"_index":384,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["service.configur",{"_index":414,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service.configuration.t",{"_index":465,"title":{},"body":{"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{}}}],["service.module.t",{"_index":472,"title":{},"body":{"modules/LoggingServiceModule.html":{}}}],["service/src/lib/ajax",{"_index":7,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"coverage.html":{}}}],["service/src/lib/brows",{"_index":187,"title":{},"body":{"interfaces/BrowserConsoleAppenderConfiguration.html":{},"coverage.html":{}}}],["service/src/lib/loc",{"_index":191,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"coverage.html":{}}}],["service/src/lib/log",{"_index":278,"title":{},"body":{"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/lib/logger.model.t",{"_index":317,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["service/src/lib/logger.model.ts:11",{"_index":325,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:112",{"_index":334,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:128",{"_index":338,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:145",{"_index":332,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:164",{"_index":336,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:179",{"_index":340,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:199",{"_index":343,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:29",{"_index":345,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:38",{"_index":349,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:48",{"_index":351,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:64",{"_index":328,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:80",{"_index":347,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logger.model.ts:96",{"_index":353,"title":{},"body":{"classes/Logger.html":{}}}],["service/src/lib/logging.service.t",{"_index":383,"title":{},"body":{"injectables/LoggingService.html":{},"coverage.html":{}}}],["service/src/lib/logging.service.ts:138",{"_index":407,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:147",{"_index":399,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:159",{"_index":402,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:31",{"_index":410,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:37",{"_index":409,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:41",{"_index":395,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/logging.service.ts:80",{"_index":397,"title":{},"body":{"injectables/LoggingService.html":{}}}],["service/src/lib/memori",{"_index":475,"title":{},"body":{"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{}}}],["set",{"_index":95,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["setbatchs",{"_index":35,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["setbatchsize(batchs",{"_index":93,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["setlayout",{"_index":36,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["setlayout(layout",{"_index":98,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["setloglevel",{"_index":323,"title":{},"body":{"classes/Logger.html":{}}}],["setloglevel(level",{"_index":348,"title":{},"body":{"classes/Logger.html":{}}}],["setmaxmessag",{"_index":207,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["setmaxmessages(valu",{"_index":218,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["setonlogmessageschangedcallback",{"_index":478,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["setonlogmessageschangedcallback(callback",{"_index":484,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["settimerinterv",{"_index":37,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["settimerinterval(timerinterv",{"_index":100,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["sever",{"_index":623,"title":{},"body":{"index.html":{}}}],["show",{"_index":420,"title":{},"body":{"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["singl",{"_index":600,"title":{},"body":{"index.html":{}}}],["size",{"_index":97,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"modules/LoggingServiceModule.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["specif",{"_index":59,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["specifi",{"_index":400,"title":{},"body":{"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["start",{"_index":539,"title":{"index.html":{}},"body":{}}],["statement",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":119,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"classes/MemoryAppender.html":{}}}],["step",{"_index":568,"title":{},"body":{"index.html":{}}}],["storag",{"_index":192,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["store",{"_index":193,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["string",{"_index":106,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"index.html":{}}}],["super",{"_index":127,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["switch",{"_index":295,"title":{},"body":{"classes/LogLevelConverter.html":{}}}],["tabl",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":644,"title":{},"body":{"index.html":{}}}],["tehm",{"_index":634,"title":{},"body":{"index.html":{}}}],["test",{"_index":80,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{}}}],["therefor",{"_index":276,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["this.ajaxappend",{"_index":133,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.addheader(\"cont",{"_index":139,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.append(loggingev",{"_index":165,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.getbatchs",{"_index":167,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.getlayout",{"_index":169,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.gettimerinterv",{"_index":171,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.setbatchsize(batchs",{"_index":168,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.setfailcallback((messag",{"_index":145,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.setlayout(layout",{"_index":170,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.setlayout(new",{"_index":136,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.setsendallonunload(tru",{"_index":143,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.settimed(timerinterv",{"_index":172,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappender.settimerinterval(timerinterv",{"_index":173,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.ajaxappenderfail",{"_index":425,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.ajaxappenderfailed.emit(messag",{"_index":451,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.appenderfail",{"_index":144,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.appenderfailed.emit(messag",{"_index":146,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.browserconsoleappend",{"_index":429,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.browserconsoleappender.setlayout(new",{"_index":430,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.browserconsoleappender.setthreshold(convertedthreshold",{"_index":461,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.browserconsoleappender.setthreshold(log4javascript.level.al",{"_index":434,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.configur",{"_index":149,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["this.localstoragekey",{"_index":239,"title":{},"body":{"classes/LocalStorageAppender.html":{}}}],["this.logg",{"_index":354,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["this.logger.debug.apply(this.logg",{"_index":363,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.entry(methodnam",{"_index":577,"title":{},"body":{"index.html":{}}}],["this.logger.error(methodnam",{"_index":581,"title":{},"body":{"index.html":{}}}],["this.logger.error.apply(this.logg",{"_index":369,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.exit(methodnam",{"_index":578,"title":{},"body":{"index.html":{}}}],["this.logger.fatal.apply(this.logg",{"_index":371,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.info.apply(this.logg",{"_index":365,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.isdebugen",{"_index":362,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.iserroren",{"_index":368,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.isfatalen",{"_index":370,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.isinfoen",{"_index":364,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.istraceen",{"_index":359,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.iswarnen",{"_index":366,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.setlevel(loglevelconverter.leveltolog4javascript(level",{"_index":358,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.trace.apply(this.logg",{"_index":361,"title":{},"body":{"classes/Logger.html":{}}}],["this.logger.warn.apply(this.logg",{"_index":367,"title":{},"body":{"classes/Logger.html":{}}}],["this.logmessag",{"_index":243,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.logmessages.length",{"_index":255,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.logmessages.push(messag",{"_index":269,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.logmessages.shift",{"_index":257,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.logmessages.splice(0",{"_index":499,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["this.logmessageschang",{"_index":424,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logmessageschanged.emit(messag",{"_index":441,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.maxmessag",{"_index":256,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.memoryappend",{"_index":438,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.memoryappender.configure(configuration.memoryappend",{"_index":457,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.memoryappender.getlogmessag",{"_index":464,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.memoryappender.setlayout(new",{"_index":439,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.memoryappender.setonlogmessageschangedcallback((messag",{"_index":440,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.onlogmessageschangedcallback",{"_index":496,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["this.onlogmessageschangedcallback(messag",{"_index":497,"title":{},"body":{"classes/MemoryAppender.html":{}}}],["this.setbatchsize(configuration.batchs",{"_index":157,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.setmaxmessages(configuration.maxmessag",{"_index":251,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.setthreshold(convertedthreshold",{"_index":164,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["this.settimerinterval(configuration.timerinterv",{"_index":159,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["this.url",{"_index":135,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["threshold",{"_index":25,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["thresholddefault",{"_index":124,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["throw",{"_index":128,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/LogLevelConverter.html":{},"injectables/LoggingService.html":{}}}],["time",{"_index":89,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/LogMessage.html":{},"classes/MemoryAppender.html":{}}}],["timer",{"_index":102,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["timerinterv",{"_index":23,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["timerintervaldefault",{"_index":122,"title":{},"body":{"classes/AjaxAppender.html":{}}}],["timestamp",{"_index":245,"title":{},"body":{"classes/LocalStorageAppender.html":{},"interfaces/LogMessage.html":{},"classes/MemoryAppender.html":{}}}],["tostr",{"_index":38,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/MemoryAppender.html":{}}}],["trace",{"_index":183,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["trace(methodnam",{"_index":350,"title":{},"body":{"classes/Logger.html":{}}}],["tri",{"_index":376,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{},"index.html":{}}}],["trigger",{"_index":54,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{}}}],["true",{"_index":656,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":230,"title":{},"body":{"classes/LocalStorageAppender.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["type",{"_index":49,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"interfaces/LogMessage.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":158,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["typic",{"_index":16,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"index.html":{}}}],["undefin",{"_index":263,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["unit",{"_index":79,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"classes/MemoryAppender.html":{}}}],["url",{"_index":19,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{}}}],["us",{"_index":77,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["usag",{"_index":565,"title":{},"body":{"index.html":{}}}],["usefactori",{"_index":658,"title":{},"body":{"index.html":{}}}],["valid",{"_index":179,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["valu",{"_index":180,"title":{},"body":{"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"interfaces/MemoryAppenderConfiguration.html":{}}}],["version",{"_index":542,"title":{},"body":{"index.html":{}}}],["via",{"_index":14,"title":{},"body":{"classes/AjaxAppender.html":{},"injectables/LoggingService.html":{}}}],["visibl",{"_index":633,"title":{},"body":{"index.html":{}}}],["void",{"_index":62,"title":{},"body":{"classes/AjaxAppender.html":{},"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{},"index.html":{}}}],["want",{"_index":489,"title":{},"body":{"classes/MemoryAppender.html":{},"index.html":{}}}],["warn",{"_index":125,"title":{},"body":{"classes/AjaxAppender.html":{},"interfaces/AjaxAppenderConfiguration.html":{},"interfaces/BrowserConsoleAppenderConfiguration.html":{},"classes/LocalStorageAppender.html":{},"interfaces/LocalStorageAppenderConfiguration.html":{},"classes/LogLevelConverter.html":{},"classes/Logger.html":{},"injectables/LoggingService.html":{},"interfaces/LoggingServiceConfiguration.html":{},"interfaces/MemoryAppenderConfiguration.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["warn(methodnam",{"_index":352,"title":{},"body":{"classes/Logger.html":{}}}],["way",{"_index":647,"title":{},"body":{"index.html":{}}}],["write",{"_index":270,"title":{},"body":{"classes/LocalStorageAppender.html":{},"classes/Logger.html":{},"index.html":{}}}],["written",{"_index":315,"title":{},"body":{"interfaces/LogMessage.html":{},"index.html":{}}}],["ye",{"_index":326,"title":{},"body":{"classes/Logger.html":{},"injectables/LoggingService.html":{},"classes/MemoryAppender.html":{}}}],["zone.j",{"_index":533,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AjaxAppender.html":{"url":"classes/AjaxAppender.html","title":"class - AjaxAppender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AjaxAppender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/ajax-appender.model.ts\n        \n\n            \n                Description\n            \n            \n                An appender which sends the log messages to a server via HTTP.\nA typical configuration could be:\n * {\n *   \"url\": \"https://my.backend.xy/LoggingBackend\",\n *   \"batchSize\": 10,\n *   \"timerInterval\": 60000,\n *   \"threshold\": \"INFO\"\n * }\n *\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appenderFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                getBatchSize\n                            \n                            \n                                    Public\n                                getInternalAppender\n                            \n                            \n                                    Public\n                                getLayout\n                            \n                            \n                                    Public\n                                getTimerInterval\n                            \n                            \n                                    Public\n                                setBatchSize\n                            \n                            \n                                    Public\n                                setLayout\n                            \n                            \n                                    Public\n                                setTimerInterval\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configuration: AjaxAppenderConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:35\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the appender.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                    AjaxAppenderConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration for the appender.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appenderFailed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appenderFailed:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:32\n                            \n                        \n\n                \n                    \n                        Event triggered when the appender could not send log messages to the server.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        message\n                                                        \n                                                                error message\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        append(loggingEvent: log4javascript.LoggingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:103\n                            \n                        \n\n\n                \n                    \n                            Appender-specific method to append a log message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingEvent\n                                                        \n                                                                    log4javascript.LoggingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event to be appended.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(configuration: AjaxAppenderConfiguration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:80\n                            \n                        \n\n\n                \n                    \n                            Configures the logging depending on the given configuration.\nOnly the defined properties get overwritten.\nThe url cannot be modified.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                        \n                                                                    AjaxAppenderConfiguration\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBatchSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBatchSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns the number of log messages sent in each request.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getInternalAppender\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInternalAppender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:120\n                            \n                        \n\n\n                \n                    \n                            Get the internally used appender.\nMainly for unit testing purposes.\n\n\n                            \n                                Returns :     log4javascript.AjaxAppender\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLayout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:142\n                            \n                        \n\n\n                \n                    \n                            Returns the appender's layout.\n\n\n                            \n                                Returns :     log4javascript.Layout\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTimerInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTimerInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:156\n                            \n                        \n\n\n                \n                    \n                            Returns the length of time in milliseconds between each sending of queued log messages.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setBatchSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setBatchSize(batchSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:135\n                            \n                        \n\n\n                \n                    \n                            Sets the number of log messages to send in each request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        batchSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new batch size\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLayout(layout: log4javascript.Layout)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:149\n                            \n                        \n\n\n                \n                    \n                            Sets the appender's layout.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layout\n                                                        \n                                                                    log4javascript.Layout\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTimerInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTimerInterval(timerInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:164\n                            \n                        \n\n\n                \n                    \n                            Sets the length of time in milliseconds between each sending of queued log messages.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timerInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new timer interval\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/ajax-appender.model.ts:112\n                            \n                        \n\n\n                \n                    \n                            Gets the appender's name.\nMainly for unit testing purposes.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    appender's name\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from \"@angular/core\";\n\nimport * as log4javascript from \"log4javascript\";\n\nimport { AjaxAppenderConfiguration } from \"./ajax-appender.configuration\";\nimport { LogLevelConverter } from \"./log-level.converter\";\n\n/**\n * An appender which sends the log messages to a server via HTTP.\n *\n * A typical configuration could be:\n *\n * ```json\n * {\n *   \"url\": \"https://my.backend.xy/LoggingBackend\",\n *   \"batchSize\": 10,\n *   \"timerInterval\": 60000,\n *   \"threshold\": \"INFO\"\n * }\n * ```\n */\nexport class AjaxAppender extends log4javascript.Appender {\n\n\tprivate static batchSizeDefault = 1;\n\tprivate static timerIntervalDefault = 0;\n\tprivate static thresholdDefault = \"WARN\";\n\n\t/**\n\t * Event triggered when the appender could not send log messages to the server.\n\t * @param message error message\n\t */\n\tpublic appenderFailed: EventEmitter;\n\n\tprivate ajaxAppender: log4javascript.AjaxAppender;\n\tprivate url: string;\n\n\t/**\n\t * Creates a new instance of the appender.\n\t * @param configuration configuration for the appender.\n\t */\n\tconstructor(configuration: AjaxAppenderConfiguration) {\n\t\tsuper();\n\n\t\tif (!configuration) {\n\t\t\tthrow new Error(\"configuration must be not empty\");\n\t\t}\n\t\tif (!configuration.url) {\n\t\t\tthrow new Error(\"url must be not empty\");\n\t\t}\n\t\tthis.ajaxAppender = new log4javascript.AjaxAppender(configuration.url);\n\t\tthis.url = configuration.url;\n\n\t\tthis.ajaxAppender.setLayout(new log4javascript.JsonLayout(false, false));\n\t\tthis.ajaxAppender.addHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\t\tthis.ajaxAppender.setSendAllOnUnload(true);\n\n\t\tthis.appenderFailed = new EventEmitter();\n\t\tthis.ajaxAppender.setFailCallback((message: any) => {\n\t\t\tthis.appenderFailed.emit(message);\n\t\t});\n\n\t\t// process remaining configuration\n\t\tthis.configure({\n\t\t\tbatchSize: configuration.batchSize || AjaxAppender.batchSizeDefault,\n\t\t\tthreshold: configuration.threshold || AjaxAppender.thresholdDefault,\n\t\t\ttimerInterval: configuration.timerInterval || AjaxAppender.timerIntervalDefault,\n\t\t\turl: configuration.url,\n\t\t});\n\n\t}\n\n\t/**\n\t * Configures the logging depending on the given configuration.\n\t *\n\t * Only the defined properties get overwritten.\n\t * The url cannot be modified.\n\t *\n\t * @param configuration configuration data.\n\t */\n\tpublic configure(configuration: AjaxAppenderConfiguration): void {\n\t\tif (configuration) {\n\t\t\tif (configuration.url && configuration.url !== this.url) {\n\t\t\t\tthrow new Error(\"url must not be changed\");\n\t\t\t}\n\t\t\tif (configuration.batchSize) {\n\t\t\t\tthis.setBatchSize(configuration.batchSize);\n\t\t\t}\n\t\t\tif (typeof configuration.timerInterval === \"number\") {\n\t\t\t\tthis.setTimerInterval(configuration.timerInterval);\n\t\t\t}\n\t\t\tif (configuration.threshold) {\n\t\t\t\tconst convertedThreshold = LogLevelConverter.levelToLog4Javascript(\n\t\t\t\t\tLogLevelConverter.levelFromString(configuration.threshold));\n\t\t\t\tthis.setThreshold(convertedThreshold);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Appender-specific method to append a log message.\n\t * @param loggingEvent event to be appended.\n\t */\n\tpublic append(loggingEvent: log4javascript.LoggingEvent): void {\n\t\tthis.ajaxAppender.append(loggingEvent);\n\t}\n\n\t/**\n\t * Gets the appender's name.\n\t * Mainly for unit testing purposes.\n\t * @return appender's name\n\t */\n\tpublic toString(): string {\n\t\treturn \"Ionic.Logging.AjaxAppender\";\n\t}\n\n\t/**\n\t * Get the internally used appender.\n\t * Mainly for unit testing purposes.\n\t */\n\tpublic getInternalAppender(): log4javascript.AjaxAppender {\n\t\treturn this.ajaxAppender;\n\t}\n\n\t/**\n\t * Returns the number of log messages sent in each request.\n\t */\n\tpublic getBatchSize(): number {\n\t\treturn this.ajaxAppender.getBatchSize();\n\t}\n\n\t/**\n\t * Sets the number of log messages to send in each request.\n\t * @param batchSize new batch size\n\t */\n\tpublic setBatchSize(batchSize: number): void {\n\t\tthis.ajaxAppender.setBatchSize(batchSize);\n\t}\n\n\t/**\n\t * Returns the appender's layout.\n\t */\n\tpublic getLayout(): log4javascript.Layout {\n\t\treturn this.ajaxAppender.getLayout();\n\t}\n\n\t/**\n\t * Sets the appender's layout.\n\t */\n\tpublic setLayout(layout: log4javascript.Layout): void {\n\t\tthis.ajaxAppender.setLayout(layout);\n\t}\n\n\t/**\n\t * Returns the length of time in milliseconds between each sending of queued log messages.\n\t */\n\tpublic getTimerInterval(): number {\n\t\treturn this.ajaxAppender.getTimerInterval();\n\t}\n\n\t/**\n\t * Sets the length of time in milliseconds between each sending of queued log messages.\n\t * @param timerInterval new timer interval\n\t */\n\tpublic setTimerInterval(timerInterval: number): void {\n\t\tthis.ajaxAppender.setTimed(timerInterval > 0);\n\t\tthis.ajaxAppender.setTimerInterval(timerInterval);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AjaxAppenderConfiguration.html":{"url":"interfaces/AjaxAppenderConfiguration.html","title":"interface - AjaxAppenderConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AjaxAppenderConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/ajax-appender.configuration.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for AjaxAppender.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        batchSize\n                                \n                                \n                                            Optional\n                                        threshold\n                                \n                                \n                                            Optional\n                                        timerInterval\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        batchSize\n                                    \n                                \n                                \n                                    \n                                        batchSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of log messages sent in each request.\nDefault: 1.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                    \n                                \n                                \n                                    \n                                        threshold:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Threshold.\nValid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\nDefault: WARN.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timerInterval\n                                    \n                                \n                                \n                                    \n                                        timerInterval:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Interval for sending log messages (in milliseconds).\nIf set to 0, every message will be sent immediatedly.\nDefault: 0.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to send JavaScript logs\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AjaxAppenderConfiguration {\n\n\t/**\n\t * Url to send JavaScript logs\n\t */\n\turl: string;\n\n\t/**\n\t * Number of log messages sent in each request.\n\t *\n\t * Default: 1.\n\t */\n\tbatchSize?: number;\n\n\t/**\n\t * Interval for sending log messages (in milliseconds).\n\t *\n\t * If set to 0, every message will be sent immediatedly.\n\t *\n\t * Default: 0.\n\t */\n\ttimerInterval?: number;\n\n\t/**\n\t * Threshold.\n\t *\n\t * Valid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\n\t *\n\t * Default: WARN.\n\t */\n\tthreshold?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BrowserConsoleAppenderConfiguration.html":{"url":"interfaces/BrowserConsoleAppenderConfiguration.html","title":"interface - BrowserConsoleAppenderConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BrowserConsoleAppenderConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/browser-console-appender.configuration.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for BrowserConsoleAppender.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        threshold\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                    \n                                \n                                \n                                    \n                                        threshold:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Threshold.\nValid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\nDefault: DEBUG.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BrowserConsoleAppenderConfiguration {\n\t/**\n\t * Threshold.\n\t *\n\t * Valid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\n\t *\n\t * Default: DEBUG.\n\t */\n\tthreshold?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalStorageAppender.html":{"url":"classes/LocalStorageAppender.html","title":"class - LocalStorageAppender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalStorageAppender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/local-storage-appender.model.ts\n        \n\n            \n                Description\n            \n            \n                An appender which stores the log messages in the browser's local storage.\nThe messages are saved JSON-serialized.\nYou have to configure which key is used for storing the messages.\nA typical configuration could be:\n * {\n *   \"localStorageKey\": \"myLogs\",\n *   \"maxMessages\": 500,\n *   \"threshold\": \"INFO\"\n * }\n *\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                clearLog\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                getLocalStorageKey\n                            \n                            \n                                    Public\n                                getLogMessages\n                            \n                            \n                                    Public\n                                getMaxMessages\n                            \n                            \n                                    Public\n                                setMaxMessages\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configuration: LocalStorageAppenderConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:34\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the appender.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                    LocalStorageAppenderConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration for the appender.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        append(loggingEvent: log4javascript.LoggingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:100\n                            \n                        \n\n\n                \n                    \n                            Appender-specific method to append a log message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingEvent\n                                                        \n                                                                    log4javascript.LoggingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event to be appended.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearLog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:177\n                            \n                        \n\n\n                \n                    \n                            Removes all messages from local storage.\nMainly for unit testing purposes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(configuration: LocalStorageAppenderConfiguration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:80\n                            \n                        \n\n\n                \n                    \n                            Configures the logging depending on the given configuration.\nOnly the defined properties get overwritten.\nThe localStorageKey cannot be modified.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                        \n                                                                    LocalStorageAppenderConfiguration\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocalStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLocalStorageKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:131\n                            \n                        \n\n\n                \n                    \n                            Get the key which is used to store the messages in the local storage.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLogMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLogMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:169\n                            \n                        \n\n\n                \n                    \n                            Gets all messages stored in local storage.\nMainly for unit testing purposes.\n\n\n                            \n                            \n                            \n                                Returns :     LogMessage[]\n\n                            \n                                \n                                    stored messages\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMaxMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMaxMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:138\n                            \n                        \n\n\n                \n                    \n                            Get the maximum number of messages which will be stored in local storage.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setMaxMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setMaxMessages(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:148\n                            \n                        \n\n\n                \n                    \n                            Set the maximum number of messages which will be stored in local storage.\nIf the appender stores currently more messages than the new value allows, the oldest messages get removed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new maximum number\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/local-storage-appender.model.ts:124\n                            \n                        \n\n\n                \n                    \n                            Gets the appender's name.\nMainly for unit testing purposes.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    appender's name\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as log4javascript from \"log4javascript\";\n\nimport { LocalStorageAppenderConfiguration } from \"./local-storage-appender.configuration\";\nimport { LogLevelConverter } from \"./log-level.converter\";\nimport { LogLevel } from \"./log-level.model\";\nimport { LogMessage } from \"./log-message.model\";\n\n/**\n * An appender which stores the log messages in the browser's local storage.\n *\n * The messages are saved JSON-serialized.\n * You have to configure which key is used for storing the messages.\n *\n * A typical configuration could be:\n *\n * ```json\n * {\n *   \"localStorageKey\": \"myLogs\",\n *   \"maxMessages\": 500,\n *   \"threshold\": \"INFO\"\n * }\n * ```\n */\nexport class LocalStorageAppender extends log4javascript.Appender {\n\n\tprivate static maxMessagesDefault = 250;\n\tprivate static thresholdDefault = \"WARN\";\n\n\tprivate maxMessages: number;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate localStorageKey: string;\n\t// tslint:disable-next-line:completed-docs\n\tprivate logMessages: LogMessage[];\n\n\t/**\n\t * Creates a new instance of the appender.\n\t * @param configuration configuration for the appender.\n\t */\n\tconstructor(configuration: LocalStorageAppenderConfiguration) {\n\t\tsuper();\n\n\t\tif (!configuration) {\n\t\t\tthrow new Error(\"configuration must be not empty\");\n\t\t}\n\t\t// tslint:disable-next-line:no-null-keyword\n\t\tif (!configuration.localStorageKey || configuration.localStorageKey === \"\") {\n\t\t\tthrow new Error(\"localStorageKey must be not empty\");\n\t\t}\n\t\tthis.localStorageKey = configuration.localStorageKey;\n\n\t\t// read existing logMessages\n\t\t// tslint:disable-next-line:no-null-keyword\n\t\tif (localStorage.getItem(this.localStorageKey) === null) {\n\t\t\tthis.logMessages = [];\n\t\t} else {\n\t\t\tthis.logMessages = JSON.parse(localStorage.getItem(this.localStorageKey));\n\t\t\tfor (const logMessage of this.logMessages) {\n\t\t\t\t// timestamps are serialized as strings\n\t\t\t\tlogMessage.timeStamp = new Date(logMessage.timeStamp);\n\t\t\t}\n\t\t}\n\n\t\t// process remaining configuration\n\t\tthis.configure({\n\t\t\tlocalStorageKey: configuration.localStorageKey,\n\t\t\tmaxMessages: configuration.maxMessages || LocalStorageAppender.maxMessagesDefault,\n\t\t\tthreshold: configuration.threshold || LocalStorageAppender.thresholdDefault,\n\t\t});\n\t}\n\n\t/**\n\t * Configures the logging depending on the given configuration.\n\t *\n\t * Only the defined properties get overwritten.\n\t * The localStorageKey cannot be modified.\n\t *\n\t * @param configuration configuration data.\n\t */\n\tpublic configure(configuration: LocalStorageAppenderConfiguration): void {\n\t\tif (configuration) {\n\t\t\tif (configuration.localStorageKey && configuration.localStorageKey !== this.localStorageKey) {\n\t\t\t\tthrow new Error(\"localStorageKey must not be changed\");\n\t\t\t}\n\t\t\tif (configuration.maxMessages) {\n\t\t\t\tthis.setMaxMessages(configuration.maxMessages);\n\t\t\t}\n\t\t\tif (configuration.threshold) {\n\t\t\t\tconst convertedThreshold = LogLevelConverter.levelToLog4Javascript(\n\t\t\t\t\tLogLevelConverter.levelFromString(configuration.threshold));\n\t\t\t\tthis.setThreshold(convertedThreshold);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Appender-specific method to append a log message.\n\t * @param loggingEvent event to be appended.\n\t */\n\tpublic append(loggingEvent: log4javascript.LoggingEvent): void {\n\t\t// if logMessages is already full, remove oldest element\n\t\twhile (this.logMessages.length >= this.maxMessages) {\n\t\t\tthis.logMessages.shift();\n\t\t}\n\t\t// add event to logMessages\n\t\tconst message: LogMessage = {\n\t\t\tlevel: LogLevel[LogLevelConverter.levelFromLog4Javascript(loggingEvent.level)],\n\t\t\tlogger: typeof loggingEvent.logger !== \"undefined\" ? loggingEvent.logger.name : undefined,\n\t\t\tmessage: loggingEvent.messages.slice(1),\n\t\t\tmethodName: loggingEvent.messages[0],\n\t\t\ttimeStamp: loggingEvent.timeStamp,\n\t\t};\n\t\tthis.logMessages.push(message);\n\n\t\t// write values to localStorage\n\t\tlocalStorage.setItem(this.localStorageKey, JSON.stringify(this.logMessages));\n\t}\n\n\t/**\n\t * Gets the appender's name.\n\t * Mainly for unit testing purposes.\n\t * @return appender's name\n\t */\n\tpublic toString(): string {\n\t\treturn \"Ionic.Logging.LocalStorageAppender\";\n\t}\n\n\t/**\n\t * Get the key which is used to store the messages in the local storage.\n\t */\n\tpublic getLocalStorageKey(): string {\n\t\treturn this.localStorageKey;\n\t}\n\n\t/**\n\t * Get the maximum number of messages which will be stored in local storage.\n\t */\n\tpublic getMaxMessages(): number {\n\t\treturn this.maxMessages;\n\t}\n\n\t/**\n\t * Set the maximum number of messages which will be stored in local storage.\n\t *\n\t * If the appender stores currently more messages than the new value allows, the oldest messages get removed.\n\t * @param value new maximum number\n\t */\n\tpublic setMaxMessages(value: number): void {\n\t\tif (this.maxMessages !== value) {\n\t\t\tthis.maxMessages = value;\n\n\t\t\tif (this.logMessages.length > this.maxMessages) {\n\t\t\t\t// there are too much logMessages for the new value, therefore remove oldest messages\n\t\t\t\twhile (this.logMessages.length > this.maxMessages) {\n\t\t\t\t\tthis.logMessages.shift();\n\t\t\t\t}\n\n\t\t\t\t// write values to localStorage\n\t\t\t\tlocalStorage.setItem(this.localStorageKey, JSON.stringify(this.logMessages));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets all messages stored in local storage.\n\t * Mainly for unit testing purposes.\n\t * @return stored messages\n\t */\n\tpublic getLogMessages(): LogMessage[] {\n\t\treturn this.logMessages;\n\t}\n\n\t/**\n\t * Removes all messages from local storage.\n\t * Mainly for unit testing purposes.\n\t */\n\tpublic clearLog(): void {\n\t\tthis.logMessages = [];\n\t\tlocalStorage.removeItem(this.localStorageKey);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalStorageAppenderConfiguration.html":{"url":"interfaces/LocalStorageAppenderConfiguration.html","title":"interface - LocalStorageAppenderConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalStorageAppenderConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/local-storage-appender.configuration.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for LocalStorageAppender.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        localStorageKey\n                                \n                                \n                                            Optional\n                                        maxMessages\n                                \n                                \n                                            Optional\n                                        threshold\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        localStorageKey\n                                    \n                                \n                                \n                                    \n                                        localStorageKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key which is used to store the messages in the local storage.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxMessages\n                                    \n                                \n                                \n                                    \n                                        maxMessages:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum number of log messages stored by the appender.\nDefault: 250.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                    \n                                \n                                \n                                    \n                                        threshold:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Threshold.\nValid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\nDefault: WARN.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LocalStorageAppenderConfiguration {\n\t/**\n\t * Key which is used to store the messages in the local storage.\n\t */\n\tlocalStorageKey: string;\n\n\t/**\n\t * Maximum number of log messages stored by the appender.\n\t *\n\t * Default: 250.\n\t */\n\tmaxMessages?: number;\n\n\t/**\n\t * Threshold.\n\t *\n\t * Valid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN\n\t *\n\t * Default: WARN.\n\t */\n\tthreshold?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogLevelConverter.html":{"url":"classes/LogLevelConverter.html","title":"class - LogLevelConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogLevelConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/log-level.converter.ts\n        \n\n            \n                Description\n            \n            \n                Helper class for converting log levels from and to different data type.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                levelFromLog4Javascript\n                            \n                            \n                                    Static\n                                levelFromString\n                            \n                            \n                                    Static\n                                levelToLog4Javascript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            levelFromLog4Javascript\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        levelFromLog4Javascript(level: log4javascript.Level)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/log-level.converter.ts:15\n                            \n                        \n\n\n                \n                    \n                            Converts log4javascript.Level to internal LogLevel.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    log4javascript.Level\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                log4javascript's data type\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LogLevel\n\n                            \n                                \n                                    internal data type.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            levelFromString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        levelFromString(level: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/log-level.converter.ts:43\n                            \n                        \n\n\n                \n                    \n                            Converts string representation to internal LogLevel.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string representation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LogLevel\n\n                            \n                                \n                                    internal data type.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            levelToLog4Javascript\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        levelToLog4Javascript(level: LogLevel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/log-level.converter.ts:71\n                            \n                        \n\n\n                \n                    \n                            Converts internal LogLevel to log4javascript.Level.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    LogLevel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     log4javascript.Level\n\n                            \n                                \n                                    level log4javascript's data type\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as log4javascript from \"log4javascript\";\n\nimport { LogLevel } from \"./log-level.model\";\n\n/**\n * Helper class for converting log levels from and to different data type.\n */\nexport class LogLevelConverter {\n\n\t/**\n\t * Converts log4javascript.Level to internal LogLevel.\n\t * @param level log4javascript's data type\n\t * @return internal data type.\n\t */\n\tpublic static levelFromLog4Javascript(level: log4javascript.Level): LogLevel {\n\t\tswitch (level) {\n\t\t\tcase log4javascript.Level.ALL:\n\t\t\t\treturn LogLevel.ALL;\n\t\t\tcase log4javascript.Level.DEBUG:\n\t\t\t\treturn LogLevel.DEBUG;\n\t\t\tcase log4javascript.Level.ERROR:\n\t\t\t\treturn LogLevel.ERROR;\n\t\t\tcase log4javascript.Level.FATAL:\n\t\t\t\treturn LogLevel.FATAL;\n\t\t\tcase log4javascript.Level.INFO:\n\t\t\t\treturn LogLevel.INFO;\n\t\t\tcase log4javascript.Level.OFF:\n\t\t\t\treturn LogLevel.OFF;\n\t\t\tcase log4javascript.Level.TRACE:\n\t\t\t\treturn LogLevel.TRACE;\n\t\t\tcase log4javascript.Level.WARN:\n\t\t\t\treturn LogLevel.WARN;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`invalid level ${level}`);\n\t\t}\n\t}\n\n\t/**\n\t * Converts string representation to internal LogLevel.\n\t * @param level string representation\n\t * @return internal data type.\n\t */\n\tpublic static levelFromString(level: string): LogLevel {\n\t\tswitch (level) {\n\t\t\tcase \"ALL\":\n\t\t\t\treturn LogLevel.ALL;\n\t\t\tcase \"DEBUG\":\n\t\t\t\treturn LogLevel.DEBUG;\n\t\t\tcase \"ERROR\":\n\t\t\t\treturn LogLevel.ERROR;\n\t\t\tcase \"FATAL\":\n\t\t\t\treturn LogLevel.FATAL;\n\t\t\tcase \"INFO\":\n\t\t\t\treturn LogLevel.INFO;\n\t\t\tcase \"OFF\":\n\t\t\t\treturn LogLevel.OFF;\n\t\t\tcase \"TRACE\":\n\t\t\t\treturn LogLevel.TRACE;\n\t\t\tcase \"WARN\":\n\t\t\t\treturn LogLevel.WARN;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`invalid level ${level}`);\n\t\t}\n\t}\n\n\t/**\n\t * Converts internal LogLevel to log4javascript.Level.\n\t * @param internal data type.\n\t * @return level log4javascript's data type\n\t */\n\tpublic static levelToLog4Javascript(level: LogLevel): log4javascript.Level {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.ALL:\n\t\t\t\treturn log4javascript.Level.ALL;\n\t\t\tcase LogLevel.DEBUG:\n\t\t\t\treturn log4javascript.Level.DEBUG;\n\t\t\tcase LogLevel.ERROR:\n\t\t\t\treturn log4javascript.Level.ERROR;\n\t\t\tcase LogLevel.FATAL:\n\t\t\t\treturn log4javascript.Level.FATAL;\n\t\t\tcase LogLevel.INFO:\n\t\t\t\treturn log4javascript.Level.INFO;\n\t\t\tcase LogLevel.OFF:\n\t\t\t\treturn log4javascript.Level.OFF;\n\t\t\tcase LogLevel.TRACE:\n\t\t\t\treturn log4javascript.Level.TRACE;\n\t\t\tcase LogLevel.WARN:\n\t\t\t\treturn log4javascript.Level.WARN;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`invalid level ${level}`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogMessage.html":{"url":"interfaces/LogMessage.html","title":"interface - LogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/log-message.model.ts\n        \n\n            \n                Description\n            \n            \n                Log message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        logger\n                                \n                                \n                                        message\n                                \n                                \n                                        methodName\n                                \n                                \n                                        timeStamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Log level.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                    \n                                \n                                \n                                    \n                                        logger:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the logger.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methodName\n                                    \n                                \n                                \n                                    \n                                        methodName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Method, in which the message was written.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                    \n                                \n                                \n                                    \n                                        timeStamp:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time when the log was written.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LogMessage {\n\t/**\n\t * Time when the log was written.\n\t */\n\ttimeStamp: Date;\n\n\t/**\n\t * Log level.\n\t */\n\tlevel: string;\n\n\t/**\n\t * Name of the logger.\n\t */\n\tlogger: string;\n\n\t/**\n\t * Method, in which the message was written.\n\t */\n\tmethodName: string;\n\n\t/**\n\t * Message.\n\t */\n\tmessage: string[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/logger.model.ts\n        \n\n            \n                Description\n            \n            \n                Logger for writing log messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                entry\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                exit\n                            \n                            \n                                    Public\n                                fatal\n                            \n                            \n                                    Public\n                                formatArgument\n                            \n                            \n                                    Public\n                                getInternalLogger\n                            \n                            \n                                    Public\n                                getLogLevel\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                setLogLevel\n                            \n                            \n                                    Public\n                                trace\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger?: string | any)\n                    \n                \n                        \n                            \n                                Defined in projects/ionic-logging-service/src/lib/logger.model.ts:11\n                            \n                        \n\n                \n                    \n                            Creates a new instance of a logger.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    string | any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:64\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level DEBUG.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        entry(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:145\n                            \n                        \n\n\n                \n                    \n                            Logs the entry into a method.\nThe method name will be logged at level INFO, the parameters at level DEBUG.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:112\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level ERROR.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exit(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:164\n                            \n                        \n\n\n                \n                    \n                            Logs the exit of a method.\nThe method name will be logged at level INFO, the parameters at level DEBUG.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fatal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fatal(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:128\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level FATAL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formatArgument\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        formatArgument(arg: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:179\n                            \n                        \n\n\n                \n                    \n                            Formats the given argument.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getInternalLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInternalLogger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:199\n                            \n                        \n\n\n                \n                    \n                            Returns the internal Logger (for unit tests only).\n\n\n                            \n                                Returns :     log4javascript.Logger\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLogLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:29\n                            \n                        \n\n\n                \n                    \n                            Get the log level.\n\n\n                            \n                                Returns :     LogLevel\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:80\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level INFO.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLogLevel(level: LogLevel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:38\n                            \n                        \n\n\n                \n                    \n                            Set the log level.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    LogLevel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new log level\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trace(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:48\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level TRACE.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warn(methodName: string, ...params: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logger.model.ts:96\n                            \n                        \n\n\n                \n                    \n                            Logs a message at level WARN.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the method\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                optional parameters to be logged; objects will be formatted as JSON\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as log4javascript from \"log4javascript\";\n\nimport { LogLevelConverter } from \"./log-level.converter\";\nimport { LogLevel } from \"./log-level.model\";\n\n/**\n * Logger for writing log messages.\n */\nexport class Logger {\n\n\tprivate logger: log4javascript.Logger;\n\n\t/**\n\t * Creates a new instance of a logger.\n\t */\n\tconstructor(logger?: string | any) {\n\t\tif (typeof logger === \"undefined\") {\n\t\t\tthis.logger = log4javascript.getRootLogger();\n\t\t} else if (typeof logger === \"string\") {\n\t\t\tthis.logger = log4javascript.getLogger(logger);\n\t\t} else {\n\t\t\tthis.logger = logger;\n\t\t}\n\t}\n\n\t/**\n\t * Get the log level.\n\t */\n\tpublic getLogLevel(): LogLevel {\n\t\treturn LogLevelConverter.levelFromLog4Javascript(this.logger.getLevel());\n\t}\n\n\t/**\n\t * Set the log level.\n\t *\n\t * @param level the new log level\n\t */\n\tpublic setLogLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(LogLevelConverter.levelToLog4Javascript(level));\n\t}\n\n\t/**\n\t * Logs a message at level TRACE.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic trace(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isTraceEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.trace.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs a message at level DEBUG.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic debug(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isDebugEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.debug.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs a message at level INFO.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic info(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isInfoEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.info.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs a message at level WARN.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic warn(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isWarnEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.warn.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs a message at level ERROR.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic error(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isErrorEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.error.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs a message at level FATAL.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic fatal(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isFatalEnabled()) {\n\t\t\tconst args = [methodName];\n\t\t\tfor (const param of params) {\n\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t}\n\t\t\tthis.logger.fatal.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs the entry into a method.\n\t * The method name will be logged at level INFO, the parameters at level DEBUG.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic entry(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isInfoEnabled()) {\n\t\t\tconst args = [methodName, \"entry\"];\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tfor (const param of params) {\n\t\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.logger.info.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Logs the exit of a method.\n\t * The method name will be logged at level INFO, the parameters at level DEBUG.\n\t *\n\t * @param methodName name of the method\n\t * @param params optional parameters to be logged; objects will be formatted as JSON\n\t */\n\tpublic exit(methodName: string, ...params: any[]): void {\n\t\tif (this.logger.isInfoEnabled()) {\n\t\t\tconst args = [methodName, \"exit\"];\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tfor (const param of params) {\n\t\t\t\t\targs.push(this.formatArgument(param));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.logger.info.apply(this.logger, args);\n\t\t}\n\t}\n\n\t/**\n\t * Formats the given argument.\n\t */\n\tpublic formatArgument(arg: any): string {\n\t\tif (typeof arg === \"string\") {\n\t\t\treturn arg;\n\t\t} else if (typeof arg === \"number\") {\n\t\t\treturn arg.toString();\n\t\t} else if (arg instanceof Error) {\n\t\t\t// JSON.stringify() returns here \"{ }\"\n\t\t\treturn arg.toString();\n\t\t} else {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(arg);\n\t\t\t} catch (e) {\n\t\t\t\treturn e.message;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the internal Logger (for unit tests only).\n\t */\n\tpublic getInternalLogger(): log4javascript.Logger {\n\t\treturn this.logger;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingService.html":{"url":"injectables/LoggingService.html","title":"injectable - LoggingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/logging.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for logging functionality.\nBy default, the following settings are used:\n\nlogger: root with level WARN\nappender: BrowserConsoleAppender with threshold DEBUG and MemoryAppender with threshold ALL\n\nVia configure, it is possible to amend these settings.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ajaxAppenderFailed\n                            \n                            \n                                    Public\n                                logMessagesChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                getLogger\n                            \n                            \n                                    Public\n                                getLogMessages\n                            \n                            \n                                    Public\n                                getRootLogger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ionic-logging-service/src/lib/logging.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the service.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(configuration?: LoggingServiceConfiguration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Configures the logging depending on the given configuration.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                        \n                                                                    LoggingServiceConfiguration\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                configuration data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLogger(loggerName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Gets a logger with the specified name, creating it if a logger with that name does not already exist.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggerName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                name of the logger\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Logger\n\n                            \n                                \n                                    logger\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLogMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLogMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            Gets the last log messages.\nThe log messages are retrieved from the internal MemoryAppender.\nThat means you will get only the most current messages. The number of the messages is limited\nby its maxMessages value.\n\n\n                            \n                            \n                            \n                                Returns :     LogMessage[]\n\n                            \n                                \n                                    log messages\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRootLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRootLogger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:138\n                            \n                        \n\n\n                \n                    \n                            Gets the root logger from which all other loggers derive.\n\n\n                            \n                            \n                            \n                                Returns :     Logger\n\n                            \n                                \n                                    root logger\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ajaxAppenderFailed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ajaxAppenderFailed:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:37\n                            \n                        \n\n                \n                    \n                        Event triggered when ajax appender could not send log messages to the server.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        message\n                                                        \n                                                                error message\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logMessagesChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logMessagesChanged:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/logging.service.ts:31\n                            \n                        \n\n                \n                    \n                        Event triggered when new log message was added.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        message\n                                                        \n                                                                new log message\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, Optional } from \"@angular/core\";\n\nimport * as log4javascript from \"log4javascript\";\n\nimport { AjaxAppender } from \"./ajax-appender.model\";\nimport { LocalStorageAppender } from \"./local-storage-appender.model\";\nimport { LogLevelConverter } from \"./log-level.converter\";\nimport { LogMessage } from \"./log-message.model\";\nimport { Logger } from \"./logger.model\";\nimport { LoggingServiceConfiguration } from \"./logging-service.configuration\";\nimport { MemoryAppender } from \"./memory-appender.model\";\n\n/**\n * Service for logging functionality.\n *\n * By default, the following settings are used:\n *  - logger: root with level WARN\n *  - appender: BrowserConsoleAppender with threshold DEBUG and MemoryAppender with threshold ALL\n *\n * Via [configure](#configure), it is possible to amend these settings.\n */\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class LoggingService {\n\n\t/**\n\t * Event triggered when new log message was added.\n\t * @param message new log message\n\t */\n\tpublic logMessagesChanged: EventEmitter;\n\n\t/**\n\t * Event triggered when ajax appender could not send log messages to the server.\n\t * @param message error message\n\t */\n\tpublic ajaxAppenderFailed: EventEmitter;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate memoryAppender: MemoryAppender;\n\tprivate browserConsoleAppender: log4javascript.BrowserConsoleAppender;\n\n\t/**\n\t * Creates a new instance of the service.\n\t */\n\tconstructor() {\n\n\t\t// prevent log4javascript to show alerts on case of errors\n\t\tlog4javascript.logLog.setQuietMode(true);\n\n\t\t// create event emitter\n\t\tthis.logMessagesChanged = new EventEmitter();\n\t\tthis.ajaxAppenderFailed = new EventEmitter();\n\n\t\t// configure appender\n\t\tconst logger = log4javascript.getRootLogger();\n\t\tlogger.setLevel(log4javascript.Level.WARN);\n\n\t\t// browser console appender for debugger\n\t\tthis.browserConsoleAppender = new log4javascript.BrowserConsoleAppender();\n\t\tthis.browserConsoleAppender.setLayout(new log4javascript.PatternLayout(\"%d{HH:mm:ss,SSS} %c %m\"));\n\t\tthis.browserConsoleAppender.setThreshold(log4javascript.Level.ALL);\n\t\tlogger.addAppender(this.browserConsoleAppender);\n\n\t\t// in-memory appender for display on log messages page\n\t\tthis.memoryAppender = new MemoryAppender();\n\t\tthis.memoryAppender.setLayout(new log4javascript.PatternLayout(\"%d{HH:mm:ss,SSS} %c %m\"));\n\t\tthis.memoryAppender.setOnLogMessagesChangedCallback((message) => {\n\t\t\tthis.logMessagesChanged.emit(message);\n\t\t});\n\t\tlogger.addAppender(this.memoryAppender);\n\n\t\tthis.configure();\n\t}\n\n\t/**\n\t * Configures the logging depending on the given configuration.\n\t * @param configuration configuration data.\n\t */\n\tpublic configure(configuration?: LoggingServiceConfiguration): void {\n\n\t\tif (typeof configuration === \"undefined\") {\n\t\t\tconfiguration = {};\n\t\t}\n\n\t\t// set log levels\n\t\tif (typeof configuration.logLevels !== \"undefined\") {\n\t\t\tfor (const level of configuration.logLevels) {\n\t\t\t\tlet logger: log4javascript.Logger;\n\t\t\t\tif (level.loggerName === \"root\") {\n\t\t\t\t\tlogger = log4javascript.getRootLogger();\n\t\t\t\t} else {\n\t\t\t\t\tlogger = log4javascript.getLogger(level.loggerName);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tlogger.setLevel(LogLevelConverter.levelToLog4Javascript(LogLevelConverter.levelFromString(level.logLevel)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(`invalid log level ${level.logLevel}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// configure AjaxAppender\n\t\tif (typeof configuration.ajaxAppender !== \"undefined\") {\n\t\t\tconst ajaxAppender = new AjaxAppender(configuration.ajaxAppender);\n\t\t\tajaxAppender.appenderFailed.subscribe((message: string) => {\n\t\t\t\tthis.ajaxAppenderFailed.emit(message);\n\t\t\t});\n\t\t\tlog4javascript.getRootLogger().addAppender(ajaxAppender);\n\t\t}\n\n\t\t// configure LocalStorageAppender\n\t\tif (typeof configuration.localStorageAppender !== \"undefined\") {\n\t\t\tconst localStorageAppender = new LocalStorageAppender(configuration.localStorageAppender);\n\t\t\tlog4javascript.getRootLogger().addAppender(localStorageAppender);\n\t\t}\n\n\t\t// configure MemoryAppender\n\t\tif (configuration.memoryAppender) {\n\t\t\tthis.memoryAppender.configure(configuration.memoryAppender);\n\t\t}\n\n\t\t// configure BrowserConsoleAppender\n\t\tif (configuration.browserConsoleAppender) {\n\t\t\tif (configuration.browserConsoleAppender.threshold) {\n\t\t\t\tconst convertedThreshold = LogLevelConverter.levelToLog4Javascript(\n\t\t\t\t\tLogLevelConverter.levelFromString(configuration.browserConsoleAppender.threshold));\n\t\t\t\tthis.browserConsoleAppender.setThreshold(convertedThreshold);\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Gets the root logger from which all other loggers derive.\n\t * @return root logger\n\t */\n\tpublic getRootLogger(): Logger {\n\t\treturn new Logger();\n\t}\n\n\t/**\n\t * Gets a logger with the specified name, creating it if a logger with that name does not already exist.\n\t * @param loggerName name of the logger\n\t * @return logger\n\t */\n\tpublic getLogger(loggerName: string): Logger {\n\t\treturn new Logger(loggerName);\n\t}\n\n\t/**\n\t * Gets the last log messages.\n\t *\n\t * The log messages are retrieved from the internal [MemoryAppender](../memoryappender.html).\n\t * That means you will get only the most current messages. The number of the messages is limited\n\t * by its maxMessages value.\n\t * @return log messages\n\t */\n\tpublic getLogMessages(): LogMessage[] {\n\t\treturn this.memoryAppender.getLogMessages();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggingServiceConfiguration.html":{"url":"interfaces/LoggingServiceConfiguration.html","title":"interface - LoggingServiceConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggingServiceConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/logging-service.configuration.ts\n        \n\n            \n                Description\n            \n            \n                Partial configuration definition for LoggingService.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ajaxAppender\n                                \n                                \n                                            Optional\n                                        browserConsoleAppender\n                                \n                                \n                                            Optional\n                                        localStorageAppender\n                                \n                                \n                                            Optional\n                                        logLevels\n                                \n                                \n                                            Optional\n                                        memoryAppender\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ajaxAppender\n                                    \n                                \n                                \n                                    \n                                        ajaxAppender:     AjaxAppenderConfiguration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AjaxAppenderConfiguration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Settings for AjaxAppender.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        browserConsoleAppender\n                                    \n                                \n                                \n                                    \n                                        browserConsoleAppender:     BrowserConsoleAppenderConfiguration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BrowserConsoleAppenderConfiguration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Settings for BrowserConsoleAppender.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localStorageAppender\n                                    \n                                \n                                \n                                    \n                                        localStorageAppender:     LocalStorageAppenderConfiguration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocalStorageAppenderConfiguration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Settings for LocalStorageAppender.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevels\n                                    \n                                \n                                \n                                    \n                                        logLevels:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Log levels for different loggers.\nDefault: root: WARN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        memoryAppender\n                                    \n                                \n                                \n                                    \n                                        memoryAppender:     MemoryAppenderConfiguration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MemoryAppenderConfiguration\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Settings for MemoryAppender.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AjaxAppenderConfiguration } from \"./ajax-appender.configuration\";\nimport { BrowserConsoleAppenderConfiguration } from \"./browser-console-appender.configuration\";\nimport { LocalStorageAppenderConfiguration } from \"./local-storage-appender.configuration\";\nimport { MemoryAppenderConfiguration } from \"./memory-appender.configuration\";\n\n/**\n * Partial configuration definition for LoggingService.\n */\nexport interface LoggingServiceConfiguration {\n\n\t/**\n\t * Log levels for different loggers.\n\t * Default: root: WARN\n\t */\n\tlogLevels?: Array;\n\n\t/**\n\t * Settings for AjaxAppender.\n\t */\n\tajaxAppender?: AjaxAppenderConfiguration;\n\n\t/**\n\t * Settings for LocalStorageAppender.\n\t */\n\tlocalStorageAppender?: LocalStorageAppenderConfiguration;\n\n\t/**\n\t * Settings for MemoryAppender.\n\t */\n\tmemoryAppender?: MemoryAppenderConfiguration;\n\n\t/**\n\t * Settings for BrowserConsoleAppender.\n\t */\n\tbrowserConsoleAppender?: BrowserConsoleAppenderConfiguration;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggingServiceModule.html":{"url":"modules/LoggingServiceModule.html","title":"module - LoggingServiceModule","body":"\n                   \n\n\n\n\n  Modules\n  LoggingServiceModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/logging-service.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\n\n@NgModule({\n\timports: [\n\t],\n\tdeclarations: [\n\t],\n\texports: [\n\t]\n})\nexport class LoggingServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MemoryAppender.html":{"url":"classes/MemoryAppender.html","title":"class - MemoryAppender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MemoryAppender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/memory-appender.model.ts\n        \n\n            \n                Description\n            \n            \n                An appender which stores the log messages in the browser's memory.\nThe MemoryAppender is enabled by default.\nIf you do not specify anything else, it is using this configuration:\n * {\n *   \"memoryAppender\": [\n *     {\n *       \"maxMessages\": 250,\n *       \"threshold\": \"ALL\"\n *     }\n * }\n *\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                getLogMessages\n                            \n                            \n                                    Public\n                                getMaxMessages\n                            \n                            \n                                    Public\n                                setMaxMessages\n                            \n                            \n                                    Public\n                                setOnLogMessagesChangedCallback\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configuration?: MemoryAppenderConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:34\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the appender.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                    MemoryAppenderConfiguration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                configuration for the appender.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        append(loggingEvent: log4javascript.LoggingEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:78\n                            \n                        \n\n\n                \n                    \n                            Appender-specific method to append a log message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingEvent\n                                                        \n                                                                    log4javascript.LoggingEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event to be appended.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(configuration: MemoryAppenderConfiguration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:61\n                            \n                        \n\n\n                \n                    \n                            Configures the logging depending on the given configuration.\nOnly the defined properties get overwritten.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                        \n                                                                    MemoryAppenderConfiguration\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLogMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLogMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:134\n                            \n                        \n\n\n                \n                    \n                            Gets all messages stored in memory.\n\n\n                            \n                            \n                            \n                                Returns :     LogMessage[]\n\n                            \n                                \n                                    stored messages\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMaxMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMaxMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:111\n                            \n                        \n\n\n                \n                    \n                            Get the maximum number of messages which will be stored in memory.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setMaxMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setMaxMessages(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:121\n                            \n                        \n\n\n                \n                    \n                            Set the maximum number of messages which will be stored in memory.\nIf the appender stores currently more messages than the new value allows, the oldest messages get removed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new maximum number\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setOnLogMessagesChangedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setOnLogMessagesChangedCallback(callback: (message: LogMessage) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:143\n                            \n                        \n\n\n                \n                    \n                            Registers a callback which will be called every time a new message is appended.\nThis could be useful if you want to show new messages in realtime.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                callback to be called\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ionic-logging-service/src/lib/memory-appender.model.ts:104\n                            \n                        \n\n\n                \n                    \n                            Gets the appender's name.\nMainly for unit testing purposes.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    appender's name\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as log4javascript from \"log4javascript\";\n\nimport { LogLevelConverter } from \"./log-level.converter\";\nimport { LogLevel } from \"./log-level.model\";\nimport { LogMessage } from \"./log-message.model\";\nimport { MemoryAppenderConfiguration } from \"./memory-appender.configuration\";\n\n/**\n * An appender which stores the log messages in the browser's memory.\n *\n * The MemoryAppender is enabled by default.\n * If you do not specify anything else, it is using this configuration:\n *\n * ```JSON\n * {\n *   \"memoryAppender\": [\n *     {\n *       \"maxMessages\": 250,\n *       \"threshold\": \"ALL\"\n *     }\n * }\n * ```\n */\nexport class MemoryAppender extends log4javascript.Appender {\n\n\tprivate static maxMessagesDefault = 250;\n\tprivate static thresholdDefault = \"ALL\";\n\n\tprivate maxMessages: number;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate logMessages: LogMessage[];\n\t// tslint:disable-next-line:completed-docs\n\tprivate onLogMessagesChangedCallback: (message: LogMessage) => void;\n\n\t/**\n\t * Creates a new instance of the appender.\n\t * @param configuration configuration for the appender.\n\t */\n\tconstructor(configuration?: MemoryAppenderConfiguration) {\n\t\tsuper();\n\n\t\tthis.logMessages = [];\n\n\t\t// process configuration\n\t\tconfiguration = configuration || {};\n\t\tthis.configure({\n\t\t\tmaxMessages: configuration.maxMessages || MemoryAppender.maxMessagesDefault,\n\t\t\tthreshold: configuration.threshold || MemoryAppender.thresholdDefault,\n\t\t});\n\n\t\tthis.maxMessages = MemoryAppender.maxMessagesDefault;\n\t}\n\n\t/**\n\t * Configures the logging depending on the given configuration.\n\t * Only the defined properties get overwritten.\n\t *\n\t * @param configuration configuration data.\n\t */\n\tpublic configure(configuration: MemoryAppenderConfiguration): void {\n\t\tif (configuration) {\n\t\t\tif (configuration.maxMessages) {\n\t\t\t\tthis.setMaxMessages(configuration.maxMessages);\n\t\t\t}\n\t\t\tif (configuration.threshold) {\n\t\t\t\tconst convertedThreshold = LogLevelConverter.levelToLog4Javascript(\n\t\t\t\t\tLogLevelConverter.levelFromString(configuration.threshold));\n\t\t\t\tthis.setThreshold(convertedThreshold);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Appender-specific method to append a log message.\n\t * @param loggingEvent event to be appended.\n\t */\n\tpublic append(loggingEvent: log4javascript.LoggingEvent): void {\n\t\t// if logMessages is already full, remove oldest element\n\t\twhile (this.logMessages.length >= this.maxMessages) {\n\t\t\tthis.logMessages.shift();\n\t\t}\n\t\t// add event to logMessages\n\t\tconst message: LogMessage = {\n\t\t\tlevel: LogLevel[LogLevelConverter.levelFromLog4Javascript(loggingEvent.level)],\n\t\t\tlogger: typeof loggingEvent.logger === \"object\" ? loggingEvent.logger.name : undefined,\n\t\t\tmessage: loggingEvent.messages.slice(1),\n\t\t\tmethodName: loggingEvent.messages[0],\n\t\t\ttimeStamp: loggingEvent.timeStamp,\n\t\t};\n\t\tthis.logMessages.push(message);\n\n\t\t// inform about new message\n\t\tif (typeof this.onLogMessagesChangedCallback === \"function\") {\n\t\t\tthis.onLogMessagesChangedCallback(message);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the appender's name.\n\t * Mainly for unit testing purposes.\n\t * @return appender's name\n\t */\n\tpublic toString(): string {\n\t\treturn \"Ionic.Logging.MemoryAppender\";\n\t}\n\n\t/**\n\t * Get the maximum number of messages which will be stored in memory.\n\t */\n\tpublic getMaxMessages(): number {\n\t\treturn this.maxMessages;\n\t}\n\n\t/**\n\t * Set the maximum number of messages which will be stored in memory.\n\t *\n\t * If the appender stores currently more messages than the new value allows, the oldest messages get removed.\n\t * @param value new maximum number\n\t */\n\tpublic setMaxMessages(value: number): void {\n\t\tthis.maxMessages = value;\n\n\t\t// if there are too much logMessages for the new value, remove oldest messages\n\t\tif (this.logMessages.length > this.maxMessages) {\n\t\t\tthis.logMessages.splice(0, this.logMessages.length - this.maxMessages);\n\t\t}\n\t}\n\n\t/**\n\t * Gets all messages stored in memory.\n\t * @return stored messages\n\t */\n\tpublic getLogMessages(): LogMessage[] {\n\t\treturn this.logMessages;\n\t}\n\n\t/**\n\t * Registers a callback which will be called every time a new message is appended.\n\t * This could be useful if you want to show new messages in realtime.\n\t * @param callback callback to be called\n\t */\n\tpublic setOnLogMessagesChangedCallback(callback: (message: LogMessage) => void): void {\n\t\tthis.onLogMessagesChangedCallback = callback;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemoryAppenderConfiguration.html":{"url":"interfaces/MemoryAppenderConfiguration.html","title":"interface - MemoryAppenderConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MemoryAppenderConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ionic-logging-service/src/lib/memory-appender.configuration.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for MemoryAppender.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maxMessages\n                                \n                                \n                                            Optional\n                                        threshold\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxMessages\n                                    \n                                \n                                \n                                    \n                                        maxMessages:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum number of log messages stored by the appender.\nDefault: 250.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                    \n                                \n                                \n                                    \n                                        threshold:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Threshold.\nValid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN.\nDefault: ALL.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface MemoryAppenderConfiguration {\n\t/**\n\t * Maximum number of log messages stored by the appender.\n\t *\n\t * Default: 250.\n\t */\n\tmaxMessages?: number;\n\n\t/**\n\t * Threshold.\n\t *\n\t * Valid values are: ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN.\n\t *\n\t * Default: ALL.\n\t */\n\tthreshold?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ionic-logging-service/src/lib/ajax-appender.configuration.ts\n            \n            \n                interface\n            \n            \n                AjaxAppenderConfiguration\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/ajax-appender.model.ts\n            \n            \n                class\n            \n            \n                AjaxAppender\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/browser-console-appender.configuration.ts\n            \n            \n                interface\n            \n            \n                BrowserConsoleAppenderConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/local-storage-appender.configuration.ts\n            \n            \n                interface\n            \n            \n                LocalStorageAppenderConfiguration\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/local-storage-appender.model.ts\n            \n            \n                class\n            \n            \n                LocalStorageAppender\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/log-level.converter.ts\n            \n            \n                class\n            \n            \n                LogLevelConverter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/log-message.model.ts\n            \n            \n                interface\n            \n            \n                LogMessage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/logger.model.ts\n            \n            \n                class\n            \n            \n                Logger\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/logging-service.configuration.ts\n            \n            \n                interface\n            \n            \n                LoggingServiceConfiguration\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/logging.service.ts\n            \n            \n                injectable\n            \n            \n                LoggingService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/memory-appender.configuration.ts\n            \n            \n                interface\n            \n            \n                MemoryAppenderConfiguration\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ionic-logging-service/src/lib/memory-appender.model.ts\n            \n            \n                class\n            \n            \n                MemoryAppender\n            \n            \n                100 %\n                (9/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            log4javascript : ^1.4.15\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (projects/.../log-level.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ionic-logging-service/src/lib/log-level.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Logging levels.\n\n                        \n                    \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nionic-logging-service\nThe dependencies used by the latest version are the same as needed for Ionic 4.0.0. For older versions use:\n\n\n\nionic-logging-service\nIonic\nAngular\n\n\n\n\n6.0.0\n>= 4.0.0\n^6.0.0\n\n\n5.1.0\n>= 3.9.0\n^5.0.0\n\n\n3.1.0\n>= 3.0.0\n^4.0.0\n\n\n2.0.0\n>= 2.2.0\n^2.4.8\n\n\n1.2.1\n>= 2.0.0\n^2.2.1\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis service encapsulates log4javascript's functionalities for apps built with Ionic framework.\nFor a sample, just have a look at ionic-logging-sample.\nUsage\nFirst, you need to import the LoggingServiceModule in your AppModule. The next step is typically the configuration (see below). And then, finally, you can use the LoggingService in your code, e.g.:\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\nexport class MyComponent {\n\n  private logger: Logger;\n\n  constructor(\n    loggingService: LoggingService) {\n\n    this.logger = loggingService.getLogger(\"MyApp.MyComponent\");\n    const methodName = \"ctor\";\n    this.logger.entry(methodName);\n\n    ...\n\n    this.logger.exit(methodName);\n  }\n\n  public myMethod(index: number, message: string): number[] {\n    const methodName = \"myMethod\";\n    this.logger.entry(methodName, index, number);\n\n    try {\n      ...\n    } catch (e) {\n      this.logger.error(methodName, \"some error\", e);\n    }\n\n    this.logger.exit(methodName);\n    return result;\n  }\n}Depending how the code is called, this could produce the following output in the browser's console:\nI  18:49:43.794  MyApp.MyComponent  ctor  entry\nI  18:49:43.797  MyApp.MyComponent  ctor  exit\nI  18:49:43.801  MyApp.MyComponent  myMethod  entry  42  Hello\nE  18:49:43.814  MyApp.MyComponent  myMethod  some error\nI  18:49:43.801  MyApp.MyComponent  myMethod  exit  [2, 5, 99]Logger\nA logger is the component responsible for logging. Typically, you have one logger per every class. The logger name describe the place where in your app the class is placed. The single parts are separated by dots ('.'). This is quite the same as with namespaces in dotnet or packages in Java.\nThis builds some kind of hierarchy. E.g., if you have a logger named A.B.C.D, you get automatically also loggers for A.B.C, A.B and A. Additionally, there is the so-called root logger, which is the parent of all other loggers.\nThe hierarchy is important, since the loggers inherit the log level from there parent - if there is no other level defined. That means, you can define just one log level for the complete app (by setting the root logger's level), and you can par example define, you do not want to see logs written for logger A.B.C (this includes also A.B.C.D).\nLevel\nEvery log message has a level. This is the severity of the message. Available levels are TRACE, DEBUG, INFO, WARN, ERROR and FATAL - these correspond to the logging methods trace, debug, info, warn, error and fatal of Logger. Levels are ordered as follows: TRACE DEBUG INFO WARN ERROR FATAL. This means the FATAL is the most severe and TRACE the least. Also included are levels called ALL and OFF intended to enable or disable all logging respectively.\nSetting a level to a logger disables log messages of severity lower than that level. For instance, if a level of INFO is set on a logger then only log messages of severity INFO or greater will be logged, meaning DEBUG and TRACE messages will not be logged.\nAppender\nAppenders make the logs visible, e.g. by writing tehm to the browser's console. This is quite useful during development, either in console or using ionic serve --consolelogs. But later, you will need other logs:\n\nAjaxAppender: sends the log messages to a backend server\nMemoryAppender: keeps the log messages in memory\nLocalStorageAppender: stores the log messages in local storage\n\nIf you want to see a complete example, have a look at ionic-feedback-sample.\nConfiguration\nBy default, the following configuration is used:\n\nLogger:\n\nroot: Level.WARN\n\n\nAppender:\n\nBrowserConsoleAppender\nMemoryAppender\n\n\n\nTo change it, just call configure(). This method takes an object of type LoggingConfiguration.\nThe recommended way is to place the configuration in environment.ts:\nexport const environment = {\n  logging: {\n    ...\n  }\n};Call configure() in your app.module.ts:\nexport function configureLogging(loggingService: LoggingService): () => void {\n  return () => loggingService.configure(environment.logging);\n}\n\n@NgModule({\n  ...\n  imports: [\n    ...\n    LoggingServiceModule\n  ],\n  providers: [\n    {\n      deps: [LoggingService],\n      multi: true,\n      provide: APP_INITIALIZER,\n      useFactory: configureLogging\n    }\n  ]\n})\nexport class AppModule { }logLevels\nlogLevels gets an array of log level definitions for different loggers, e.g.\n{\n  \"logLevels\": [\n    {\n      \"loggerName\": \"root\",\n      \"logLevel\": \"DEBUG\"\n    },\n    {\n      \"loggerName\": \"MyApp.MyNamespace.MyLogger\",\n      \"logLevel\": \"INFO\"\n    }\n  ]\n};That means, instead of the default log level WARN, you want to log all messages with level DEBUG and higher. Only for MyApp.MyNamespace.MyLogger, you want to restrict the level to INFO.\najaxAppender\nWith ajaxAppender, you add an additional appender of type AjaxAppender, which sends the log messages to a backend server.\nbrowserConsoleAppender\nWith browserConsoleAppender, it is possible to configure the BrowserConsoleAppender, which writes the log to the browser's console.\nlocalStorageAppender\nWith localStorageAppender, you add an additional appender of type AjaxAppender, which stores log messages in the local storage.\nmemoryAppender\nWith memoryAppender, it is possible to configure the MemoryAppender, which keeps log messages in the memory.\nAPI\nsee API documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LoggingServiceModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
